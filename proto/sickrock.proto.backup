syntax = "proto3";

package sickrock;

option go_package = "github.com/jamesread/SickRock/gen/proto;sickrockpb";

message PingRequest {
  string message = 1;
}

message PingResponse {
  string message = 1;
  int64 timestamp_unix = 2; // UTC seconds since epoch
}

// Navigation
message GetNavigationLinksRequest {}

message NavigationLink {
  string label = 1;
  string path = 2;
}

message GetNavigationLinksResponse {
  repeated NavigationLink links = 1;
}

// Pages
message GetPagesRequest {}

message Page {
  string id = 1;
  string title = 2;
  string slug = 3;
  int32 ordinal = 4;
  string icon = 5;
  string view = 6;
}

message GetPagesResponse {
  repeated Page pages = 1;
}

// Items
message Item {
  string id = 1;
  int64 sr_created = 2;
  map<string, string> additional_fields = 3;
}

message ListItemsRequest {
  string page_id = 1;
}

message ListItemsResponse {
  repeated Item items = 1;
}

message CreateItemRequest {
  string page_id = 1;
  int64 sr_created = 2; // Optional custom timestamp
  map<string, string> additional_fields = 3;
}

message CreateItemResponse {
  Item item = 1;
}

message GetItemRequest {
  string id = 1;
}

message GetItemResponse {
  Item item = 1;
}

message EditItemRequest {
  string id = 1;
  map<string, string> additional_fields = 2;
  string page_id = 3;
}

message EditItemResponse {
  Item item = 1;
}

message DeleteItemRequest {
  string page_id = 1;
  string id = 2;
}

message DeleteItemResponse {
  bool deleted = 1;
}

// Table Structure
message GetTableStructureRequest {
  string page_id = 1;
}

message Field {
  string name = 1;
  string type = 2;
  bool required = 3;
  bool default_to_current_timestamp = 4;
}

message GetTableStructureResponse {
  repeated Field fields = 1;
  string CreateButtonText = 2;
  string view = 3;
}

message AddTableColumnRequest {
  string page_id = 1;
  Field field = 2;
}

// Table Views
message TableViewColumn {
  string column_name = 1;
  bool is_visible = 2;
  int32 column_order = 3;
  string sort_order = 4; // "asc", "desc", or empty
}

message CreateTableViewRequest {
  string table_name = 1;
  string view_name = 2;
  repeated TableViewColumn columns = 3;
}

message CreateTableViewResponse {
  bool success = 1;
  string message = 2;
}

message UpdateTableViewRequest {
  int32 view_id = 1;
  string table_name = 2;
  string view_name = 3;
  repeated TableViewColumn columns = 4;
}

message UpdateTableViewResponse {
  bool success = 1;
  string message = 2;
}

message GetTableViewsRequest {
  string table_name = 1;
}

message TableView {
  int32 id = 1;
  string table_name = 2;
  string view_name = 3;
  bool is_default = 4;
  repeated TableViewColumn columns = 5;
}

message GetTableViewsResponse {
  repeated TableView views = 1;
}

message DeleteTableViewRequest {
  int32 view_id = 1;
}

message DeleteTableViewResponse {
  bool success = 1;
  string message = 2;
}

// Foreign Key Management
message ForeignKey {
  string constraint_name = 1;
  string table_name = 2;
  string column_name = 3;
  string referenced_table = 4;
  string referenced_column = 5;
  string on_delete_action = 6;
  string on_update_action = 7;
}

message CreateForeignKeyRequest {
  string table_name = 1;
  string column_name = 2;
  string referenced_table = 3;
  string referenced_column = 4;
  string on_delete_action = 5; // "CASCADE", "SET NULL", "RESTRICT", "NO ACTION"
  string on_update_action = 6; // "CASCADE", "SET NULL", "RESTRICT", "NO ACTION"
}

message CreateForeignKeyResponse {
  bool success = 1;
  string message = 2;
}

message GetForeignKeysRequest {
  string table_name = 1;
}

message GetForeignKeysResponse {
  repeated ForeignKey foreign_keys = 1;
}

message DeleteForeignKeyRequest {
  string constraint_name = 1;
}

message DeleteForeignKeyResponse {
  bool success = 1;
  string message = 2;
}

// Column Type Management
message ChangeColumnTypeRequest {
  string table_name = 1;
  string column_name = 2;
  string new_type = 3;
}

message ChangeColumnTypeResponse {
  bool success = 1;
  string message = 2;
}

// Drop Column Management
message DropColumnRequest {
  string table_name = 1;
  string column_name = 2;
}

message DropColumnResponse {
  bool success = 1;
  string message = 2;
}

// Rename Column Management
message ChangeColumnNameRequest {
  string table_name = 1;
  string old_column_name = 2;
  string new_column_name = 3;
}

message ChangeColumnNameResponse {
  bool success = 1;
  string message = 2;
}

// Build info
message InitRequest {}

message InitResponse {
  string version = 1;
  string commit = 2;
  string date = 3;
}

service SickRock {
  rpc Init(InitRequest) returns (InitResponse);
  rpc Ping(PingRequest) returns (PingResponse);

  // Navigation for the UI
  rpc GetNavigationLinks(GetNavigationLinksRequest) returns (GetNavigationLinksResponse);

  // Pages available in the application
  rpc GetPages(GetPagesRequest) returns (GetPagesResponse);

  // Generic CRUD over items on a page
  rpc ListItems(ListItemsRequest) returns (ListItemsResponse);
  rpc CreateItem(CreateItemRequest) returns (CreateItemResponse);
  rpc GetItem(GetItemRequest) returns (GetItemResponse);
  rpc EditItem(EditItemRequest) returns (EditItemResponse);
  rpc DeleteItem(DeleteItemRequest) returns (DeleteItemResponse);

  // Get structure/fields for a given page/table
  rpc GetTableStructure(GetTableStructureRequest) returns (GetTableStructureResponse);

  // Add a column to a table
  rpc AddTableColumn(AddTableColumnRequest) returns (GetTableStructureResponse);

  // Table Views
  rpc CreateTableView(CreateTableViewRequest) returns (CreateTableViewResponse);
  rpc UpdateTableView(UpdateTableViewRequest) returns (UpdateTableViewResponse);
  rpc GetTableViews(GetTableViewsRequest) returns (GetTableViewsResponse);
  rpc DeleteTableView(DeleteTableViewRequest) returns (DeleteTableViewResponse);

  // Foreign Key Management
  rpc CreateForeignKey(CreateForeignKeyRequest) returns (CreateForeignKeyResponse);
  rpc GetForeignKeys(GetForeignKeysRequest) returns (GetForeignKeysResponse);
  rpc DeleteForeignKey(DeleteForeignKeyRequest) returns (DeleteForeignKeyResponse);

  // Column Type Management
  rpc ChangeColumnType(ChangeColumnTypeRequest) returns (ChangeColumnTypeResponse);
  rpc DropColumn(DropColumnRequest) returns (DropColumnResponse);
  rpc ChangeColumnName(ChangeColumnNameRequest) returns (ChangeColumnNameResponse);
}
