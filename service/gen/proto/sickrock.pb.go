// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: sickrock.proto

package sickrockpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_sickrock_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	TimestampUnix int64                  `protobuf:"varint,2,opt,name=timestamp_unix,json=timestampUnix,proto3" json:"timestamp_unix,omitempty"` // UTC seconds since epoch
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_sickrock_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PingResponse) GetTimestampUnix() int64 {
	if x != nil {
		return x.TimestampUnix
	}
	return 0
}

// Navigation
type GetNavigationLinksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNavigationLinksRequest) Reset() {
	*x = GetNavigationLinksRequest{}
	mi := &file_sickrock_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNavigationLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNavigationLinksRequest) ProtoMessage() {}

func (x *GetNavigationLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNavigationLinksRequest.ProtoReflect.Descriptor instead.
func (*GetNavigationLinksRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{2}
}

type NavigationLink struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Label         string                 `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NavigationLink) Reset() {
	*x = NavigationLink{}
	mi := &file_sickrock_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NavigationLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NavigationLink) ProtoMessage() {}

func (x *NavigationLink) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NavigationLink.ProtoReflect.Descriptor instead.
func (*NavigationLink) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{3}
}

func (x *NavigationLink) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *NavigationLink) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetNavigationLinksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Links         []*NavigationLink      `protobuf:"bytes,1,rep,name=links,proto3" json:"links,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNavigationLinksResponse) Reset() {
	*x = GetNavigationLinksResponse{}
	mi := &file_sickrock_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNavigationLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNavigationLinksResponse) ProtoMessage() {}

func (x *GetNavigationLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNavigationLinksResponse.ProtoReflect.Descriptor instead.
func (*GetNavigationLinksResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{4}
}

func (x *GetNavigationLinksResponse) GetLinks() []*NavigationLink {
	if x != nil {
		return x.Links
	}
	return nil
}

// Table Configurations
type GetTableConfigurationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTableConfigurationsRequest) Reset() {
	*x = GetTableConfigurationsRequest{}
	mi := &file_sickrock_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTableConfigurationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableConfigurationsRequest) ProtoMessage() {}

func (x *GetTableConfigurationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableConfigurationsRequest.ProtoReflect.Descriptor instead.
func (*GetTableConfigurationsRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{5}
}

type Page struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Slug          string                 `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Ordinal       int32                  `protobuf:"varint,4,opt,name=ordinal,proto3" json:"ordinal,omitempty"`
	Icon          string                 `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	View          string                 `protobuf:"bytes,6,opt,name=view,proto3" json:"view,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Page) Reset() {
	*x = Page{}
	mi := &file_sickrock_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{6}
}

func (x *Page) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Page) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Page) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Page) GetOrdinal() int32 {
	if x != nil {
		return x.Ordinal
	}
	return 0
}

func (x *Page) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Page) GetView() string {
	if x != nil {
		return x.View
	}
	return ""
}

type GetTableConfigurationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pages         []*Page                `protobuf:"bytes,1,rep,name=pages,proto3" json:"pages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTableConfigurationsResponse) Reset() {
	*x = GetTableConfigurationsResponse{}
	mi := &file_sickrock_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTableConfigurationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableConfigurationsResponse) ProtoMessage() {}

func (x *GetTableConfigurationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableConfigurationsResponse.ProtoReflect.Descriptor instead.
func (*GetTableConfigurationsResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{7}
}

func (x *GetTableConfigurationsResponse) GetPages() []*Page {
	if x != nil {
		return x.Pages
	}
	return nil
}

type CreateTableConfigurationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Database      string                 `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Table         string                 `protobuf:"bytes,3,opt,name=table,proto3" json:"table,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTableConfigurationRequest) Reset() {
	*x = CreateTableConfigurationRequest{}
	mi := &file_sickrock_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTableConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableConfigurationRequest) ProtoMessage() {}

func (x *CreateTableConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableConfigurationRequest.ProtoReflect.Descriptor instead.
func (*CreateTableConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{8}
}

func (x *CreateTableConfigurationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTableConfigurationRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *CreateTableConfigurationRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

type CreateTableConfigurationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTableConfigurationResponse) Reset() {
	*x = CreateTableConfigurationResponse{}
	mi := &file_sickrock_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTableConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableConfigurationResponse) ProtoMessage() {}

func (x *CreateTableConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableConfigurationResponse.ProtoReflect.Descriptor instead.
func (*CreateTableConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{9}
}

func (x *CreateTableConfigurationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateTableConfigurationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetDatabaseTablesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Database      string                 `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDatabaseTablesRequest) Reset() {
	*x = GetDatabaseTablesRequest{}
	mi := &file_sickrock_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDatabaseTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatabaseTablesRequest) ProtoMessage() {}

func (x *GetDatabaseTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatabaseTablesRequest.ProtoReflect.Descriptor instead.
func (*GetDatabaseTablesRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{10}
}

func (x *GetDatabaseTablesRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type DatabaseTable struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TableName         string                 `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	HasConfiguration  bool                   `protobuf:"varint,2,opt,name=has_configuration,json=hasConfiguration,proto3" json:"has_configuration,omitempty"`
	ConfigurationName string                 `protobuf:"bytes,3,opt,name=configuration_name,json=configurationName,proto3" json:"configuration_name,omitempty"`
	View              string                 `protobuf:"bytes,4,opt,name=view,proto3" json:"view,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DatabaseTable) Reset() {
	*x = DatabaseTable{}
	mi := &file_sickrock_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseTable) ProtoMessage() {}

func (x *DatabaseTable) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseTable.ProtoReflect.Descriptor instead.
func (*DatabaseTable) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{11}
}

func (x *DatabaseTable) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *DatabaseTable) GetHasConfiguration() bool {
	if x != nil {
		return x.HasConfiguration
	}
	return false
}

func (x *DatabaseTable) GetConfigurationName() string {
	if x != nil {
		return x.ConfigurationName
	}
	return ""
}

func (x *DatabaseTable) GetView() string {
	if x != nil {
		return x.View
	}
	return ""
}

type GetDatabaseTablesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tables        []*DatabaseTable       `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDatabaseTablesResponse) Reset() {
	*x = GetDatabaseTablesResponse{}
	mi := &file_sickrock_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDatabaseTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatabaseTablesResponse) ProtoMessage() {}

func (x *GetDatabaseTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatabaseTablesResponse.ProtoReflect.Descriptor instead.
func (*GetDatabaseTablesResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{12}
}

func (x *GetDatabaseTablesResponse) GetTables() []*DatabaseTable {
	if x != nil {
		return x.Tables
	}
	return nil
}

// Navigation
type GetNavigationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNavigationRequest) Reset() {
	*x = GetNavigationRequest{}
	mi := &file_sickrock_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNavigationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNavigationRequest) ProtoMessage() {}

func (x *GetNavigationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNavigationRequest.ProtoReflect.Descriptor instead.
func (*GetNavigationRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{13}
}

type NavigationItem struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ordinal            int32                  `protobuf:"varint,2,opt,name=ordinal,proto3" json:"ordinal,omitempty"`
	TableConfiguration int32                  `protobuf:"varint,3,opt,name=table_configuration,json=tableConfiguration,proto3" json:"table_configuration,omitempty"`
	TableName          string                 `protobuf:"bytes,4,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	TableTitle         string                 `protobuf:"bytes,5,opt,name=table_title,json=tableTitle,proto3" json:"table_title,omitempty"`
	Icon               string                 `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	TableView          string                 `protobuf:"bytes,7,opt,name=table_view,json=tableView,proto3" json:"table_view,omitempty"`
	DashboardId        int32                  `protobuf:"varint,8,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`      // optional, 0 if not set
	DashboardName      string                 `protobuf:"bytes,9,opt,name=dashboard_name,json=dashboardName,proto3" json:"dashboard_name,omitempty"` // optional
	Title              string                 `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`                                     // navigation field from table_navigation
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *NavigationItem) Reset() {
	*x = NavigationItem{}
	mi := &file_sickrock_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NavigationItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NavigationItem) ProtoMessage() {}

func (x *NavigationItem) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NavigationItem.ProtoReflect.Descriptor instead.
func (*NavigationItem) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{14}
}

func (x *NavigationItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NavigationItem) GetOrdinal() int32 {
	if x != nil {
		return x.Ordinal
	}
	return 0
}

func (x *NavigationItem) GetTableConfiguration() int32 {
	if x != nil {
		return x.TableConfiguration
	}
	return 0
}

func (x *NavigationItem) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *NavigationItem) GetTableTitle() string {
	if x != nil {
		return x.TableTitle
	}
	return ""
}

func (x *NavigationItem) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *NavigationItem) GetTableView() string {
	if x != nil {
		return x.TableView
	}
	return ""
}

func (x *NavigationItem) GetDashboardId() int32 {
	if x != nil {
		return x.DashboardId
	}
	return 0
}

func (x *NavigationItem) GetDashboardName() string {
	if x != nil {
		return x.DashboardName
	}
	return ""
}

func (x *NavigationItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type GetNavigationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*NavigationItem      `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Bookmarks     []*UserBookmark        `protobuf:"bytes,2,rep,name=bookmarks,proto3" json:"bookmarks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNavigationResponse) Reset() {
	*x = GetNavigationResponse{}
	mi := &file_sickrock_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNavigationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNavigationResponse) ProtoMessage() {}

func (x *GetNavigationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNavigationResponse.ProtoReflect.Descriptor instead.
func (*GetNavigationResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{15}
}

func (x *GetNavigationResponse) GetItems() []*NavigationItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetNavigationResponse) GetBookmarks() []*UserBookmark {
	if x != nil {
		return x.Bookmarks
	}
	return nil
}

// Items
type Item struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SrCreated         int64                  `protobuf:"varint,2,opt,name=sr_created,json=srCreated,proto3" json:"sr_created,omitempty"`
	SrCreatedRelative int32                  `protobuf:"varint,3,opt,name=sr_created_relative,json=srCreatedRelative,proto3" json:"sr_created_relative,omitempty"` // Relative time in seconds from current timestamp
	SrUpdated         int64                  `protobuf:"varint,4,opt,name=sr_updated,json=srUpdated,proto3" json:"sr_updated,omitempty"`                           // Updated timestamp (Unix)
	SrUpdatedRelative int32                  `protobuf:"varint,5,opt,name=sr_updated_relative,json=srUpdatedRelative,proto3" json:"sr_updated_relative,omitempty"` // Relative time in seconds from current timestamp
	AdditionalFields  map[string]string      `protobuf:"bytes,6,rep,name=additional_fields,json=additionalFields,proto3" json:"additional_fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Item) Reset() {
	*x = Item{}
	mi := &file_sickrock_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{16}
}

func (x *Item) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Item) GetSrCreated() int64 {
	if x != nil {
		return x.SrCreated
	}
	return 0
}

func (x *Item) GetSrCreatedRelative() int32 {
	if x != nil {
		return x.SrCreatedRelative
	}
	return 0
}

func (x *Item) GetSrUpdated() int64 {
	if x != nil {
		return x.SrUpdated
	}
	return 0
}

func (x *Item) GetSrUpdatedRelative() int32 {
	if x != nil {
		return x.SrUpdatedRelative
	}
	return 0
}

func (x *Item) GetAdditionalFields() map[string]string {
	if x != nil {
		return x.AdditionalFields
	}
	return nil
}

type ListItemsRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	TcName string                 `protobuf:"bytes,1,opt,name=tc_name,json=tcName,proto3" json:"tc_name,omitempty"`
	// Exact-match filters: column -> value
	Where         map[string]string `protobuf:"bytes,2,rep,name=where,proto3" json:"where,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListItemsRequest) Reset() {
	*x = ListItemsRequest{}
	mi := &file_sickrock_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListItemsRequest) ProtoMessage() {}

func (x *ListItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListItemsRequest.ProtoReflect.Descriptor instead.
func (*ListItemsRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{17}
}

func (x *ListItemsRequest) GetTcName() string {
	if x != nil {
		return x.TcName
	}
	return ""
}

func (x *ListItemsRequest) GetWhere() map[string]string {
	if x != nil {
		return x.Where
	}
	return nil
}

type ListItemsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Item                `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListItemsResponse) Reset() {
	*x = ListItemsResponse{}
	mi := &file_sickrock_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListItemsResponse) ProtoMessage() {}

func (x *ListItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListItemsResponse.ProtoReflect.Descriptor instead.
func (*ListItemsResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{18}
}

func (x *ListItemsResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateItemRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PageId           string                 `protobuf:"bytes,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	SrCreated        int64                  `protobuf:"varint,2,opt,name=sr_created,json=srCreated,proto3" json:"sr_created,omitempty"` // Optional custom timestamp
	AdditionalFields map[string]string      `protobuf:"bytes,3,rep,name=additional_fields,json=additionalFields,proto3" json:"additional_fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateItemRequest) Reset() {
	*x = CreateItemRequest{}
	mi := &file_sickrock_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItemRequest) ProtoMessage() {}

func (x *CreateItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItemRequest.ProtoReflect.Descriptor instead.
func (*CreateItemRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{19}
}

func (x *CreateItemRequest) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

func (x *CreateItemRequest) GetSrCreated() int64 {
	if x != nil {
		return x.SrCreated
	}
	return 0
}

func (x *CreateItemRequest) GetAdditionalFields() map[string]string {
	if x != nil {
		return x.AdditionalFields
	}
	return nil
}

type CreateItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *Item                  `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateItemResponse) Reset() {
	*x = CreateItemResponse{}
	mi := &file_sickrock_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItemResponse) ProtoMessage() {}

func (x *CreateItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItemResponse.ProtoReflect.Descriptor instead.
func (*CreateItemResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{20}
}

func (x *CreateItemResponse) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type GetItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageId        string                 `protobuf:"bytes,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetItemRequest) Reset() {
	*x = GetItemRequest{}
	mi := &file_sickrock_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemRequest) ProtoMessage() {}

func (x *GetItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemRequest.ProtoReflect.Descriptor instead.
func (*GetItemRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{21}
}

func (x *GetItemRequest) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

func (x *GetItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *Item                  `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetItemResponse) Reset() {
	*x = GetItemResponse{}
	mi := &file_sickrock_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemResponse) ProtoMessage() {}

func (x *GetItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemResponse.ProtoReflect.Descriptor instead.
func (*GetItemResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{22}
}

func (x *GetItemResponse) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type EditItemRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AdditionalFields map[string]string      `protobuf:"bytes,2,rep,name=additional_fields,json=additionalFields,proto3" json:"additional_fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PageId           string                 `protobuf:"bytes,3,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EditItemRequest) Reset() {
	*x = EditItemRequest{}
	mi := &file_sickrock_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditItemRequest) ProtoMessage() {}

func (x *EditItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditItemRequest.ProtoReflect.Descriptor instead.
func (*EditItemRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{23}
}

func (x *EditItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EditItemRequest) GetAdditionalFields() map[string]string {
	if x != nil {
		return x.AdditionalFields
	}
	return nil
}

func (x *EditItemRequest) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

type EditItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *Item                  `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditItemResponse) Reset() {
	*x = EditItemResponse{}
	mi := &file_sickrock_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditItemResponse) ProtoMessage() {}

func (x *EditItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditItemResponse.ProtoReflect.Descriptor instead.
func (*EditItemResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{24}
}

func (x *EditItemResponse) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type DeleteItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageId        string                 `protobuf:"bytes,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteItemRequest) Reset() {
	*x = DeleteItemRequest{}
	mi := &file_sickrock_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItemRequest) ProtoMessage() {}

func (x *DeleteItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItemRequest.ProtoReflect.Descriptor instead.
func (*DeleteItemRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteItemRequest) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

func (x *DeleteItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deleted       bool                   `protobuf:"varint,1,opt,name=deleted,proto3" json:"deleted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteItemResponse) Reset() {
	*x = DeleteItemResponse{}
	mi := &file_sickrock_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItemResponse) ProtoMessage() {}

func (x *DeleteItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItemResponse.ProtoReflect.Descriptor instead.
func (*DeleteItemResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteItemResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

// Table Structure
type GetTableStructureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageId        string                 `protobuf:"bytes,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTableStructureRequest) Reset() {
	*x = GetTableStructureRequest{}
	mi := &file_sickrock_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTableStructureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableStructureRequest) ProtoMessage() {}

func (x *GetTableStructureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableStructureRequest.ProtoReflect.Descriptor instead.
func (*GetTableStructureRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{27}
}

func (x *GetTableStructureRequest) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

type Field struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Name                      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                      string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Required                  bool                   `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	DefaultToCurrentTimestamp bool                   `protobuf:"varint,4,opt,name=default_to_current_timestamp,json=defaultToCurrentTimestamp,proto3" json:"default_to_current_timestamp,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *Field) Reset() {
	*x = Field{}
	mi := &file_sickrock_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{28}
}

func (x *Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Field) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Field) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *Field) GetDefaultToCurrentTimestamp() bool {
	if x != nil {
		return x.DefaultToCurrentTimestamp
	}
	return false
}

type GetTableStructureResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Fields           []*Field               `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	CreateButtonText string                 `protobuf:"bytes,2,opt,name=CreateButtonText,proto3" json:"CreateButtonText,omitempty"`
	View             string                 `protobuf:"bytes,3,opt,name=view,proto3" json:"view,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetTableStructureResponse) Reset() {
	*x = GetTableStructureResponse{}
	mi := &file_sickrock_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTableStructureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableStructureResponse) ProtoMessage() {}

func (x *GetTableStructureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableStructureResponse.ProtoReflect.Descriptor instead.
func (*GetTableStructureResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{29}
}

func (x *GetTableStructureResponse) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *GetTableStructureResponse) GetCreateButtonText() string {
	if x != nil {
		return x.CreateButtonText
	}
	return ""
}

func (x *GetTableStructureResponse) GetView() string {
	if x != nil {
		return x.View
	}
	return ""
}

type AddTableColumnRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageId        string                 `protobuf:"bytes,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	Field         *Field                 `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTableColumnRequest) Reset() {
	*x = AddTableColumnRequest{}
	mi := &file_sickrock_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTableColumnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTableColumnRequest) ProtoMessage() {}

func (x *AddTableColumnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTableColumnRequest.ProtoReflect.Descriptor instead.
func (*AddTableColumnRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{30}
}

func (x *AddTableColumnRequest) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

func (x *AddTableColumnRequest) GetField() *Field {
	if x != nil {
		return x.Field
	}
	return nil
}

// Table Views
type TableViewColumn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ColumnName    string                 `protobuf:"bytes,1,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	IsVisible     bool                   `protobuf:"varint,2,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`
	ColumnOrder   int32                  `protobuf:"varint,3,opt,name=column_order,json=columnOrder,proto3" json:"column_order,omitempty"`
	SortOrder     string                 `protobuf:"bytes,4,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"` // "asc", "desc", or empty
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableViewColumn) Reset() {
	*x = TableViewColumn{}
	mi := &file_sickrock_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableViewColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableViewColumn) ProtoMessage() {}

func (x *TableViewColumn) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableViewColumn.ProtoReflect.Descriptor instead.
func (*TableViewColumn) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{31}
}

func (x *TableViewColumn) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *TableViewColumn) GetIsVisible() bool {
	if x != nil {
		return x.IsVisible
	}
	return false
}

func (x *TableViewColumn) GetColumnOrder() int32 {
	if x != nil {
		return x.ColumnOrder
	}
	return 0
}

func (x *TableViewColumn) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

type CreateTableViewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableName     string                 `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	ViewName      string                 `protobuf:"bytes,2,opt,name=view_name,json=viewName,proto3" json:"view_name,omitempty"`
	Columns       []*TableViewColumn     `protobuf:"bytes,3,rep,name=columns,proto3" json:"columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTableViewRequest) Reset() {
	*x = CreateTableViewRequest{}
	mi := &file_sickrock_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTableViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableViewRequest) ProtoMessage() {}

func (x *CreateTableViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableViewRequest.ProtoReflect.Descriptor instead.
func (*CreateTableViewRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{32}
}

func (x *CreateTableViewRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *CreateTableViewRequest) GetViewName() string {
	if x != nil {
		return x.ViewName
	}
	return ""
}

func (x *CreateTableViewRequest) GetColumns() []*TableViewColumn {
	if x != nil {
		return x.Columns
	}
	return nil
}

type CreateTableViewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTableViewResponse) Reset() {
	*x = CreateTableViewResponse{}
	mi := &file_sickrock_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTableViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableViewResponse) ProtoMessage() {}

func (x *CreateTableViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableViewResponse.ProtoReflect.Descriptor instead.
func (*CreateTableViewResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{33}
}

func (x *CreateTableViewResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateTableViewResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateTableViewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ViewId        int32                  `protobuf:"varint,1,opt,name=view_id,json=viewId,proto3" json:"view_id,omitempty"`
	TableName     string                 `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	ViewName      string                 `protobuf:"bytes,3,opt,name=view_name,json=viewName,proto3" json:"view_name,omitempty"`
	Columns       []*TableViewColumn     `protobuf:"bytes,4,rep,name=columns,proto3" json:"columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTableViewRequest) Reset() {
	*x = UpdateTableViewRequest{}
	mi := &file_sickrock_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTableViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTableViewRequest) ProtoMessage() {}

func (x *UpdateTableViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTableViewRequest.ProtoReflect.Descriptor instead.
func (*UpdateTableViewRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateTableViewRequest) GetViewId() int32 {
	if x != nil {
		return x.ViewId
	}
	return 0
}

func (x *UpdateTableViewRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *UpdateTableViewRequest) GetViewName() string {
	if x != nil {
		return x.ViewName
	}
	return ""
}

func (x *UpdateTableViewRequest) GetColumns() []*TableViewColumn {
	if x != nil {
		return x.Columns
	}
	return nil
}

type UpdateTableViewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTableViewResponse) Reset() {
	*x = UpdateTableViewResponse{}
	mi := &file_sickrock_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTableViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTableViewResponse) ProtoMessage() {}

func (x *UpdateTableViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTableViewResponse.ProtoReflect.Descriptor instead.
func (*UpdateTableViewResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateTableViewResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateTableViewResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetTableViewsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableName     string                 `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTableViewsRequest) Reset() {
	*x = GetTableViewsRequest{}
	mi := &file_sickrock_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTableViewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableViewsRequest) ProtoMessage() {}

func (x *GetTableViewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableViewsRequest.ProtoReflect.Descriptor instead.
func (*GetTableViewsRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{36}
}

func (x *GetTableViewsRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type TableView struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TableName     string                 `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	ViewName      string                 `protobuf:"bytes,3,opt,name=view_name,json=viewName,proto3" json:"view_name,omitempty"`
	IsDefault     bool                   `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	Columns       []*TableViewColumn     `protobuf:"bytes,5,rep,name=columns,proto3" json:"columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableView) Reset() {
	*x = TableView{}
	mi := &file_sickrock_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableView) ProtoMessage() {}

func (x *TableView) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableView.ProtoReflect.Descriptor instead.
func (*TableView) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{37}
}

func (x *TableView) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TableView) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *TableView) GetViewName() string {
	if x != nil {
		return x.ViewName
	}
	return ""
}

func (x *TableView) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *TableView) GetColumns() []*TableViewColumn {
	if x != nil {
		return x.Columns
	}
	return nil
}

type GetTableViewsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Views         []*TableView           `protobuf:"bytes,1,rep,name=views,proto3" json:"views,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTableViewsResponse) Reset() {
	*x = GetTableViewsResponse{}
	mi := &file_sickrock_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTableViewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableViewsResponse) ProtoMessage() {}

func (x *GetTableViewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableViewsResponse.ProtoReflect.Descriptor instead.
func (*GetTableViewsResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{38}
}

func (x *GetTableViewsResponse) GetViews() []*TableView {
	if x != nil {
		return x.Views
	}
	return nil
}

type DeleteTableViewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ViewId        int32                  `protobuf:"varint,1,opt,name=view_id,json=viewId,proto3" json:"view_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTableViewRequest) Reset() {
	*x = DeleteTableViewRequest{}
	mi := &file_sickrock_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTableViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTableViewRequest) ProtoMessage() {}

func (x *DeleteTableViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTableViewRequest.ProtoReflect.Descriptor instead.
func (*DeleteTableViewRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteTableViewRequest) GetViewId() int32 {
	if x != nil {
		return x.ViewId
	}
	return 0
}

type DeleteTableViewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTableViewResponse) Reset() {
	*x = DeleteTableViewResponse{}
	mi := &file_sickrock_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTableViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTableViewResponse) ProtoMessage() {}

func (x *DeleteTableViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTableViewResponse.ProtoReflect.Descriptor instead.
func (*DeleteTableViewResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteTableViewResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteTableViewResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Foreign Key Management
type ForeignKey struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ConstraintName   string                 `protobuf:"bytes,1,opt,name=constraint_name,json=constraintName,proto3" json:"constraint_name,omitempty"`
	TableName        string                 `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	ColumnName       string                 `protobuf:"bytes,3,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	ReferencedTable  string                 `protobuf:"bytes,4,opt,name=referenced_table,json=referencedTable,proto3" json:"referenced_table,omitempty"`
	ReferencedColumn string                 `protobuf:"bytes,5,opt,name=referenced_column,json=referencedColumn,proto3" json:"referenced_column,omitempty"`
	OnDeleteAction   string                 `protobuf:"bytes,6,opt,name=on_delete_action,json=onDeleteAction,proto3" json:"on_delete_action,omitempty"`
	OnUpdateAction   string                 `protobuf:"bytes,7,opt,name=on_update_action,json=onUpdateAction,proto3" json:"on_update_action,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ForeignKey) Reset() {
	*x = ForeignKey{}
	mi := &file_sickrock_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForeignKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForeignKey) ProtoMessage() {}

func (x *ForeignKey) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForeignKey.ProtoReflect.Descriptor instead.
func (*ForeignKey) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{41}
}

func (x *ForeignKey) GetConstraintName() string {
	if x != nil {
		return x.ConstraintName
	}
	return ""
}

func (x *ForeignKey) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *ForeignKey) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *ForeignKey) GetReferencedTable() string {
	if x != nil {
		return x.ReferencedTable
	}
	return ""
}

func (x *ForeignKey) GetReferencedColumn() string {
	if x != nil {
		return x.ReferencedColumn
	}
	return ""
}

func (x *ForeignKey) GetOnDeleteAction() string {
	if x != nil {
		return x.OnDeleteAction
	}
	return ""
}

func (x *ForeignKey) GetOnUpdateAction() string {
	if x != nil {
		return x.OnUpdateAction
	}
	return ""
}

type CreateForeignKeyRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TableName        string                 `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	ColumnName       string                 `protobuf:"bytes,2,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	ReferencedTable  string                 `protobuf:"bytes,3,opt,name=referenced_table,json=referencedTable,proto3" json:"referenced_table,omitempty"`
	ReferencedColumn string                 `protobuf:"bytes,4,opt,name=referenced_column,json=referencedColumn,proto3" json:"referenced_column,omitempty"`
	OnDeleteAction   string                 `protobuf:"bytes,5,opt,name=on_delete_action,json=onDeleteAction,proto3" json:"on_delete_action,omitempty"` // "CASCADE", "SET NULL", "RESTRICT", "NO ACTION"
	OnUpdateAction   string                 `protobuf:"bytes,6,opt,name=on_update_action,json=onUpdateAction,proto3" json:"on_update_action,omitempty"` // "CASCADE", "SET NULL", "RESTRICT", "NO ACTION"
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateForeignKeyRequest) Reset() {
	*x = CreateForeignKeyRequest{}
	mi := &file_sickrock_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateForeignKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateForeignKeyRequest) ProtoMessage() {}

func (x *CreateForeignKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateForeignKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateForeignKeyRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{42}
}

func (x *CreateForeignKeyRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *CreateForeignKeyRequest) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *CreateForeignKeyRequest) GetReferencedTable() string {
	if x != nil {
		return x.ReferencedTable
	}
	return ""
}

func (x *CreateForeignKeyRequest) GetReferencedColumn() string {
	if x != nil {
		return x.ReferencedColumn
	}
	return ""
}

func (x *CreateForeignKeyRequest) GetOnDeleteAction() string {
	if x != nil {
		return x.OnDeleteAction
	}
	return ""
}

func (x *CreateForeignKeyRequest) GetOnUpdateAction() string {
	if x != nil {
		return x.OnUpdateAction
	}
	return ""
}

type CreateForeignKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateForeignKeyResponse) Reset() {
	*x = CreateForeignKeyResponse{}
	mi := &file_sickrock_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateForeignKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateForeignKeyResponse) ProtoMessage() {}

func (x *CreateForeignKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateForeignKeyResponse.ProtoReflect.Descriptor instead.
func (*CreateForeignKeyResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{43}
}

func (x *CreateForeignKeyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateForeignKeyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetForeignKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableName     string                 `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetForeignKeysRequest) Reset() {
	*x = GetForeignKeysRequest{}
	mi := &file_sickrock_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetForeignKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForeignKeysRequest) ProtoMessage() {}

func (x *GetForeignKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForeignKeysRequest.ProtoReflect.Descriptor instead.
func (*GetForeignKeysRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{44}
}

func (x *GetForeignKeysRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type GetForeignKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ForeignKeys   []*ForeignKey          `protobuf:"bytes,1,rep,name=foreign_keys,json=foreignKeys,proto3" json:"foreign_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetForeignKeysResponse) Reset() {
	*x = GetForeignKeysResponse{}
	mi := &file_sickrock_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetForeignKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForeignKeysResponse) ProtoMessage() {}

func (x *GetForeignKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForeignKeysResponse.ProtoReflect.Descriptor instead.
func (*GetForeignKeysResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{45}
}

func (x *GetForeignKeysResponse) GetForeignKeys() []*ForeignKey {
	if x != nil {
		return x.ForeignKeys
	}
	return nil
}

type DeleteForeignKeyRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConstraintName string                 `protobuf:"bytes,1,opt,name=constraint_name,json=constraintName,proto3" json:"constraint_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteForeignKeyRequest) Reset() {
	*x = DeleteForeignKeyRequest{}
	mi := &file_sickrock_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteForeignKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteForeignKeyRequest) ProtoMessage() {}

func (x *DeleteForeignKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteForeignKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteForeignKeyRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{46}
}

func (x *DeleteForeignKeyRequest) GetConstraintName() string {
	if x != nil {
		return x.ConstraintName
	}
	return ""
}

type DeleteForeignKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteForeignKeyResponse) Reset() {
	*x = DeleteForeignKeyResponse{}
	mi := &file_sickrock_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteForeignKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteForeignKeyResponse) ProtoMessage() {}

func (x *DeleteForeignKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteForeignKeyResponse.ProtoReflect.Descriptor instead.
func (*DeleteForeignKeyResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{47}
}

func (x *DeleteForeignKeyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteForeignKeyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Column Type Management
type ChangeColumnTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableName     string                 `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	ColumnName    string                 `protobuf:"bytes,2,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	NewType       string                 `protobuf:"bytes,3,opt,name=new_type,json=newType,proto3" json:"new_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeColumnTypeRequest) Reset() {
	*x = ChangeColumnTypeRequest{}
	mi := &file_sickrock_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeColumnTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeColumnTypeRequest) ProtoMessage() {}

func (x *ChangeColumnTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeColumnTypeRequest.ProtoReflect.Descriptor instead.
func (*ChangeColumnTypeRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{48}
}

func (x *ChangeColumnTypeRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *ChangeColumnTypeRequest) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *ChangeColumnTypeRequest) GetNewType() string {
	if x != nil {
		return x.NewType
	}
	return ""
}

type ChangeColumnTypeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeColumnTypeResponse) Reset() {
	*x = ChangeColumnTypeResponse{}
	mi := &file_sickrock_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeColumnTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeColumnTypeResponse) ProtoMessage() {}

func (x *ChangeColumnTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeColumnTypeResponse.ProtoReflect.Descriptor instead.
func (*ChangeColumnTypeResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{49}
}

func (x *ChangeColumnTypeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ChangeColumnTypeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Drop Column Management
type DropColumnRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableName     string                 `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	ColumnName    string                 `protobuf:"bytes,2,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropColumnRequest) Reset() {
	*x = DropColumnRequest{}
	mi := &file_sickrock_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropColumnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropColumnRequest) ProtoMessage() {}

func (x *DropColumnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropColumnRequest.ProtoReflect.Descriptor instead.
func (*DropColumnRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{50}
}

func (x *DropColumnRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *DropColumnRequest) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

type DropColumnResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropColumnResponse) Reset() {
	*x = DropColumnResponse{}
	mi := &file_sickrock_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropColumnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropColumnResponse) ProtoMessage() {}

func (x *DropColumnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropColumnResponse.ProtoReflect.Descriptor instead.
func (*DropColumnResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{51}
}

func (x *DropColumnResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DropColumnResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Rename Column Management
type ChangeColumnNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableName     string                 `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	OldColumnName string                 `protobuf:"bytes,2,opt,name=old_column_name,json=oldColumnName,proto3" json:"old_column_name,omitempty"`
	NewColumnName string                 `protobuf:"bytes,3,opt,name=new_column_name,json=newColumnName,proto3" json:"new_column_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeColumnNameRequest) Reset() {
	*x = ChangeColumnNameRequest{}
	mi := &file_sickrock_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeColumnNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeColumnNameRequest) ProtoMessage() {}

func (x *ChangeColumnNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeColumnNameRequest.ProtoReflect.Descriptor instead.
func (*ChangeColumnNameRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{52}
}

func (x *ChangeColumnNameRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *ChangeColumnNameRequest) GetOldColumnName() string {
	if x != nil {
		return x.OldColumnName
	}
	return ""
}

func (x *ChangeColumnNameRequest) GetNewColumnName() string {
	if x != nil {
		return x.NewColumnName
	}
	return ""
}

type ChangeColumnNameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeColumnNameResponse) Reset() {
	*x = ChangeColumnNameResponse{}
	mi := &file_sickrock_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeColumnNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeColumnNameResponse) ProtoMessage() {}

func (x *ChangeColumnNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeColumnNameResponse.ProtoReflect.Descriptor instead.
func (*ChangeColumnNameResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{53}
}

func (x *ChangeColumnNameResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ChangeColumnNameResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Recently Viewed Items
type GetMostRecentlyViewedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"` // Maximum number of items to return (default: 10)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMostRecentlyViewedRequest) Reset() {
	*x = GetMostRecentlyViewedRequest{}
	mi := &file_sickrock_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMostRecentlyViewedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMostRecentlyViewedRequest) ProtoMessage() {}

func (x *GetMostRecentlyViewedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMostRecentlyViewedRequest.ProtoReflect.Descriptor instead.
func (*GetMostRecentlyViewedRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{54}
}

func (x *GetMostRecentlyViewedRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type RecentlyViewedItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                           // Table name
	TableId       string                 `protobuf:"bytes,2,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`                      // Item ID
	Icon          string                 `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`                                           // Icon from table_configurations
	UpdatedAtUnix int64                  `protobuf:"varint,4,opt,name=updated_at_unix,json=updatedAtUnix,proto3" json:"updated_at_unix,omitempty"` // When it was last viewed
	ItemName      string                 `protobuf:"bytes,5,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`                   // The actual name/title of the item
	TableTitle    string                 `protobuf:"bytes,6,opt,name=table_title,json=tableTitle,proto3" json:"table_title,omitempty"`             // Human title from table_configurations
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecentlyViewedItem) Reset() {
	*x = RecentlyViewedItem{}
	mi := &file_sickrock_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecentlyViewedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecentlyViewedItem) ProtoMessage() {}

func (x *RecentlyViewedItem) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecentlyViewedItem.ProtoReflect.Descriptor instead.
func (*RecentlyViewedItem) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{55}
}

func (x *RecentlyViewedItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecentlyViewedItem) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *RecentlyViewedItem) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *RecentlyViewedItem) GetUpdatedAtUnix() int64 {
	if x != nil {
		return x.UpdatedAtUnix
	}
	return 0
}

func (x *RecentlyViewedItem) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *RecentlyViewedItem) GetTableTitle() string {
	if x != nil {
		return x.TableTitle
	}
	return ""
}

type GetMostRecentlyViewedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*RecentlyViewedItem  `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMostRecentlyViewedResponse) Reset() {
	*x = GetMostRecentlyViewedResponse{}
	mi := &file_sickrock_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMostRecentlyViewedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMostRecentlyViewedResponse) ProtoMessage() {}

func (x *GetMostRecentlyViewedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMostRecentlyViewedResponse.ProtoReflect.Descriptor instead.
func (*GetMostRecentlyViewedResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{56}
}

func (x *GetMostRecentlyViewedResponse) GetItems() []*RecentlyViewedItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// Dashboards
type Dashboard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Components    []*DashboardComponent  `protobuf:"bytes,3,rep,name=components,proto3" json:"components,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dashboard) Reset() {
	*x = Dashboard{}
	mi := &file_sickrock_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dashboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dashboard) ProtoMessage() {}

func (x *Dashboard) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dashboard.ProtoReflect.Descriptor instead.
func (*Dashboard) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{57}
}

func (x *Dashboard) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Dashboard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dashboard) GetComponents() []*DashboardComponent {
	if x != nil {
		return x.Components
	}
	return nil
}

type GetDashboardsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDashboardsRequest) Reset() {
	*x = GetDashboardsRequest{}
	mi := &file_sickrock_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDashboardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardsRequest) ProtoMessage() {}

func (x *GetDashboardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardsRequest.ProtoReflect.Descriptor instead.
func (*GetDashboardsRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{58}
}

type GetDashboardsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dashboards    []*Dashboard           `protobuf:"bytes,1,rep,name=dashboards,proto3" json:"dashboards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDashboardsResponse) Reset() {
	*x = GetDashboardsResponse{}
	mi := &file_sickrock_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDashboardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardsResponse) ProtoMessage() {}

func (x *GetDashboardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardsResponse.ProtoReflect.Descriptor instead.
func (*GetDashboardsResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{59}
}

func (x *GetDashboardsResponse) GetDashboards() []*Dashboard {
	if x != nil {
		return x.Dashboards
	}
	return nil
}

type DashboardComponent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DataString    string                 `protobuf:"bytes,3,opt,name=dataString,proto3" json:"dataString,omitempty"`
	DataNumber    float32                `protobuf:"fixed32,4,opt,name=dataNumber,proto3" json:"dataNumber,omitempty"`
	Error         string                 `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	Suffix        string                 `protobuf:"bytes,6,opt,name=suffix,proto3" json:"suffix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DashboardComponent) Reset() {
	*x = DashboardComponent{}
	mi := &file_sickrock_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DashboardComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardComponent) ProtoMessage() {}

func (x *DashboardComponent) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardComponent.ProtoReflect.Descriptor instead.
func (*DashboardComponent) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{60}
}

func (x *DashboardComponent) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DashboardComponent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DashboardComponent) GetDataString() string {
	if x != nil {
		return x.DataString
	}
	return ""
}

func (x *DashboardComponent) GetDataNumber() float32 {
	if x != nil {
		return x.DataNumber
	}
	return 0
}

func (x *DashboardComponent) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DashboardComponent) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

type DashboardComponentRule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Component     int32                  `protobuf:"varint,2,opt,name=component,proto3" json:"component,omitempty"`
	Ordinal       int32                  `protobuf:"varint,3,opt,name=ordinal,proto3" json:"ordinal,omitempty"`
	Operation     string                 `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation,omitempty"`
	Operand       string                 `protobuf:"bytes,5,opt,name=operand,proto3" json:"operand,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DashboardComponentRule) Reset() {
	*x = DashboardComponentRule{}
	mi := &file_sickrock_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DashboardComponentRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardComponentRule) ProtoMessage() {}

func (x *DashboardComponentRule) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardComponentRule.ProtoReflect.Descriptor instead.
func (*DashboardComponentRule) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{61}
}

func (x *DashboardComponentRule) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DashboardComponentRule) GetComponent() int32 {
	if x != nil {
		return x.Component
	}
	return 0
}

func (x *DashboardComponentRule) GetOrdinal() int32 {
	if x != nil {
		return x.Ordinal
	}
	return 0
}

func (x *DashboardComponentRule) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *DashboardComponentRule) GetOperand() string {
	if x != nil {
		return x.Operand
	}
	return ""
}

type GetDashboardComponentRulesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Component     int32                  `protobuf:"varint,1,opt,name=component,proto3" json:"component,omitempty"` // filter by component id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDashboardComponentRulesRequest) Reset() {
	*x = GetDashboardComponentRulesRequest{}
	mi := &file_sickrock_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDashboardComponentRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardComponentRulesRequest) ProtoMessage() {}

func (x *GetDashboardComponentRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardComponentRulesRequest.ProtoReflect.Descriptor instead.
func (*GetDashboardComponentRulesRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{62}
}

func (x *GetDashboardComponentRulesRequest) GetComponent() int32 {
	if x != nil {
		return x.Component
	}
	return 0
}

type GetDashboardComponentRulesResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Rules         []*DashboardComponentRule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDashboardComponentRulesResponse) Reset() {
	*x = GetDashboardComponentRulesResponse{}
	mi := &file_sickrock_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDashboardComponentRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardComponentRulesResponse) ProtoMessage() {}

func (x *GetDashboardComponentRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardComponentRulesResponse.ProtoReflect.Descriptor instead.
func (*GetDashboardComponentRulesResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{63}
}

func (x *GetDashboardComponentRulesResponse) GetRules() []*DashboardComponentRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type CreateDashboardComponentRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Component     int32                  `protobuf:"varint,1,opt,name=component,proto3" json:"component,omitempty"`
	Ordinal       int32                  `protobuf:"varint,2,opt,name=ordinal,proto3" json:"ordinal,omitempty"`
	Operation     string                 `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"`
	Operand       string                 `protobuf:"bytes,4,opt,name=operand,proto3" json:"operand,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDashboardComponentRuleRequest) Reset() {
	*x = CreateDashboardComponentRuleRequest{}
	mi := &file_sickrock_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDashboardComponentRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDashboardComponentRuleRequest) ProtoMessage() {}

func (x *CreateDashboardComponentRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDashboardComponentRuleRequest.ProtoReflect.Descriptor instead.
func (*CreateDashboardComponentRuleRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{64}
}

func (x *CreateDashboardComponentRuleRequest) GetComponent() int32 {
	if x != nil {
		return x.Component
	}
	return 0
}

func (x *CreateDashboardComponentRuleRequest) GetOrdinal() int32 {
	if x != nil {
		return x.Ordinal
	}
	return 0
}

func (x *CreateDashboardComponentRuleRequest) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *CreateDashboardComponentRuleRequest) GetOperand() string {
	if x != nil {
		return x.Operand
	}
	return ""
}

type CreateDashboardComponentRuleResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Rule          *DashboardComponentRule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDashboardComponentRuleResponse) Reset() {
	*x = CreateDashboardComponentRuleResponse{}
	mi := &file_sickrock_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDashboardComponentRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDashboardComponentRuleResponse) ProtoMessage() {}

func (x *CreateDashboardComponentRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDashboardComponentRuleResponse.ProtoReflect.Descriptor instead.
func (*CreateDashboardComponentRuleResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{65}
}

func (x *CreateDashboardComponentRuleResponse) GetRule() *DashboardComponentRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

// Build info
type InitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitRequest) Reset() {
	*x = InitRequest{}
	mi := &file_sickrock_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRequest) ProtoMessage() {}

func (x *InitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRequest.ProtoReflect.Descriptor instead.
func (*InitRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{66}
}

type InitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Commit        string                 `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
	Date          string                 `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	DbName        string                 `protobuf:"bytes,4,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitResponse) Reset() {
	*x = InitResponse{}
	mi := &file_sickrock_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitResponse) ProtoMessage() {}

func (x *InitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitResponse.ProtoReflect.Descriptor instead.
func (*InitResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{67}
}

func (x *InitResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *InitResponse) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

func (x *InitResponse) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *InitResponse) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

// Authentication
type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_sickrock_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{68}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // Unix timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_sickrock_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{69}
}

func (x *LoginResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LoginResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type LogoutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	mi := &file_sickrock_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{70}
}

type LogoutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogoutResponse) Reset() {
	*x = LogoutResponse{}
	mi := &file_sickrock_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutResponse) ProtoMessage() {}

func (x *LogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutResponse.ProtoReflect.Descriptor instead.
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{71}
}

func (x *LogoutResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LogoutResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResetUserPasswordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	NewPassword   string                 `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetUserPasswordRequest) Reset() {
	*x = ResetUserPasswordRequest{}
	mi := &file_sickrock_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetUserPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetUserPasswordRequest) ProtoMessage() {}

func (x *ResetUserPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetUserPasswordRequest.ProtoReflect.Descriptor instead.
func (*ResetUserPasswordRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{72}
}

func (x *ResetUserPasswordRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ResetUserPasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type ResetUserPasswordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetUserPasswordResponse) Reset() {
	*x = ResetUserPasswordResponse{}
	mi := &file_sickrock_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetUserPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetUserPasswordResponse) ProtoMessage() {}

func (x *ResetUserPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetUserPasswordResponse.ProtoReflect.Descriptor instead.
func (*ResetUserPasswordResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{73}
}

func (x *ResetUserPasswordResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResetUserPasswordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ValidateTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateTokenRequest) Reset() {
	*x = ValidateTokenRequest{}
	mi := &file_sickrock_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTokenRequest) ProtoMessage() {}

func (x *ValidateTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateTokenRequest.ProtoReflect.Descriptor instead.
func (*ValidateTokenRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{74}
}

func (x *ValidateTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ValidateTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	InitialRoute  string                 `protobuf:"bytes,4,opt,name=initial_route,json=initialRoute,proto3" json:"initial_route,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateTokenResponse) Reset() {
	*x = ValidateTokenResponse{}
	mi := &file_sickrock_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTokenResponse) ProtoMessage() {}

func (x *ValidateTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateTokenResponse.ProtoReflect.Descriptor instead.
func (*ValidateTokenResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{75}
}

func (x *ValidateTokenResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidateTokenResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ValidateTokenResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *ValidateTokenResponse) GetInitialRoute() string {
	if x != nil {
		return x.InitialRoute
	}
	return ""
}

// Device Code Authentication
type GenerateDeviceCodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateDeviceCodeRequest) Reset() {
	*x = GenerateDeviceCodeRequest{}
	mi := &file_sickrock_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateDeviceCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateDeviceCodeRequest) ProtoMessage() {}

func (x *GenerateDeviceCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateDeviceCodeRequest.ProtoReflect.Descriptor instead.
func (*GenerateDeviceCodeRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{76}
}

type GenerateDeviceCodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // Unix timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateDeviceCodeResponse) Reset() {
	*x = GenerateDeviceCodeResponse{}
	mi := &file_sickrock_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateDeviceCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateDeviceCodeResponse) ProtoMessage() {}

func (x *GenerateDeviceCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateDeviceCodeResponse.ProtoReflect.Descriptor instead.
func (*GenerateDeviceCodeResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{77}
}

func (x *GenerateDeviceCodeResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GenerateDeviceCodeResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type ClaimDeviceCodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClaimDeviceCodeRequest) Reset() {
	*x = ClaimDeviceCodeRequest{}
	mi := &file_sickrock_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClaimDeviceCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimDeviceCodeRequest) ProtoMessage() {}

func (x *ClaimDeviceCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimDeviceCodeRequest.ProtoReflect.Descriptor instead.
func (*ClaimDeviceCodeRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{78}
}

func (x *ClaimDeviceCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ClaimDeviceCodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // Unix timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClaimDeviceCodeResponse) Reset() {
	*x = ClaimDeviceCodeResponse{}
	mi := &file_sickrock_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClaimDeviceCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimDeviceCodeResponse) ProtoMessage() {}

func (x *ClaimDeviceCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimDeviceCodeResponse.ProtoReflect.Descriptor instead.
func (*ClaimDeviceCodeResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{79}
}

func (x *ClaimDeviceCodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ClaimDeviceCodeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ClaimDeviceCodeResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ClaimDeviceCodeResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type CheckDeviceCodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckDeviceCodeRequest) Reset() {
	*x = CheckDeviceCodeRequest{}
	mi := &file_sickrock_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckDeviceCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDeviceCodeRequest) ProtoMessage() {}

func (x *CheckDeviceCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDeviceCodeRequest.ProtoReflect.Descriptor instead.
func (*CheckDeviceCodeRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{80}
}

func (x *CheckDeviceCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type CheckDeviceCodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	Claimed       bool                   `protobuf:"varint,2,opt,name=claimed,proto3" json:"claimed,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // Unix timestamp
	Token         string                 `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`                           // JWT token if claimed
	Username      string                 `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`                     // Username if claimed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckDeviceCodeResponse) Reset() {
	*x = CheckDeviceCodeResponse{}
	mi := &file_sickrock_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckDeviceCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDeviceCodeResponse) ProtoMessage() {}

func (x *CheckDeviceCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDeviceCodeResponse.ProtoReflect.Descriptor instead.
func (*CheckDeviceCodeResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{81}
}

func (x *CheckDeviceCodeResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *CheckDeviceCodeResponse) GetClaimed() bool {
	if x != nil {
		return x.Claimed
	}
	return false
}

func (x *CheckDeviceCodeResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *CheckDeviceCodeResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CheckDeviceCodeResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetDeviceCodeSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceCodeSessionRequest) Reset() {
	*x = GetDeviceCodeSessionRequest{}
	mi := &file_sickrock_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceCodeSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceCodeSessionRequest) ProtoMessage() {}

func (x *GetDeviceCodeSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceCodeSessionRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceCodeSessionRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{82}
}

func (x *GetDeviceCodeSessionRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetDeviceCodeSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // Unix timestamp
	Username      string                 `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceCodeSessionResponse) Reset() {
	*x = GetDeviceCodeSessionResponse{}
	mi := &file_sickrock_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceCodeSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceCodeSessionResponse) ProtoMessage() {}

func (x *GetDeviceCodeSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceCodeSessionResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceCodeSessionResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{83}
}

func (x *GetDeviceCodeSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetDeviceCodeSessionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetDeviceCodeSessionResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetDeviceCodeSessionResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *GetDeviceCodeSessionResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// System Info
type GetSystemInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSystemInfoRequest) Reset() {
	*x = GetSystemInfoRequest{}
	mi := &file_sickrock_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSystemInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoRequest) ProtoMessage() {}

func (x *GetSystemInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoRequest.ProtoReflect.Descriptor instead.
func (*GetSystemInfoRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{84}
}

type GetSystemInfoResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ApproxTotalRows int64                  `protobuf:"varint,1,opt,name=approx_total_rows,json=approxTotalRows,proto3" json:"approx_total_rows,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetSystemInfoResponse) Reset() {
	*x = GetSystemInfoResponse{}
	mi := &file_sickrock_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSystemInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoResponse) ProtoMessage() {}

func (x *GetSystemInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoResponse.ProtoReflect.Descriptor instead.
func (*GetSystemInfoResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{85}
}

func (x *GetSystemInfoResponse) GetApproxTotalRows() int64 {
	if x != nil {
		return x.ApproxTotalRows
	}
	return 0
}

// User Bookmarks
type GetUserBookmarksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBookmarksRequest) Reset() {
	*x = GetUserBookmarksRequest{}
	mi := &file_sickrock_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBookmarksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBookmarksRequest) ProtoMessage() {}

func (x *GetUserBookmarksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBookmarksRequest.ProtoReflect.Descriptor instead.
func (*GetUserBookmarksRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{86}
}

type GetUserBookmarksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bookmarks     []*UserBookmark        `protobuf:"bytes,1,rep,name=bookmarks,proto3" json:"bookmarks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBookmarksResponse) Reset() {
	*x = GetUserBookmarksResponse{}
	mi := &file_sickrock_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBookmarksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBookmarksResponse) ProtoMessage() {}

func (x *GetUserBookmarksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBookmarksResponse.ProtoReflect.Descriptor instead.
func (*GetUserBookmarksResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{87}
}

func (x *GetUserBookmarksResponse) GetBookmarks() []*UserBookmark {
	if x != nil {
		return x.Bookmarks
	}
	return nil
}

type CreateUserBookmarkRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	NavigationItemId int32                  `protobuf:"varint,1,opt,name=navigation_item_id,json=navigationItemId,proto3" json:"navigation_item_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateUserBookmarkRequest) Reset() {
	*x = CreateUserBookmarkRequest{}
	mi := &file_sickrock_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserBookmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserBookmarkRequest) ProtoMessage() {}

func (x *CreateUserBookmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserBookmarkRequest.ProtoReflect.Descriptor instead.
func (*CreateUserBookmarkRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{88}
}

func (x *CreateUserBookmarkRequest) GetNavigationItemId() int32 {
	if x != nil {
		return x.NavigationItemId
	}
	return 0
}

type CreateUserBookmarkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bookmark      *UserBookmark          `protobuf:"bytes,1,opt,name=bookmark,proto3" json:"bookmark,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserBookmarkResponse) Reset() {
	*x = CreateUserBookmarkResponse{}
	mi := &file_sickrock_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserBookmarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserBookmarkResponse) ProtoMessage() {}

func (x *CreateUserBookmarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserBookmarkResponse.ProtoReflect.Descriptor instead.
func (*CreateUserBookmarkResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{89}
}

func (x *CreateUserBookmarkResponse) GetBookmark() *UserBookmark {
	if x != nil {
		return x.Bookmark
	}
	return nil
}

type DeleteUserBookmarkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BookmarkId    int32                  `protobuf:"varint,1,opt,name=bookmark_id,json=bookmarkId,proto3" json:"bookmark_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserBookmarkRequest) Reset() {
	*x = DeleteUserBookmarkRequest{}
	mi := &file_sickrock_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserBookmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserBookmarkRequest) ProtoMessage() {}

func (x *DeleteUserBookmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserBookmarkRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserBookmarkRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{90}
}

func (x *DeleteUserBookmarkRequest) GetBookmarkId() int32 {
	if x != nil {
		return x.BookmarkId
	}
	return 0
}

type DeleteUserBookmarkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deleted       bool                   `protobuf:"varint,1,opt,name=deleted,proto3" json:"deleted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserBookmarkResponse) Reset() {
	*x = DeleteUserBookmarkResponse{}
	mi := &file_sickrock_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserBookmarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserBookmarkResponse) ProtoMessage() {}

func (x *DeleteUserBookmarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserBookmarkResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserBookmarkResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{91}
}

func (x *DeleteUserBookmarkResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

type UserBookmark struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId           int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NavigationItemId int32                  `protobuf:"varint,3,opt,name=navigation_item_id,json=navigationItemId,proto3" json:"navigation_item_id,omitempty"`
	NavigationItem   *NavigationItem        `protobuf:"bytes,4,opt,name=navigation_item,json=navigationItem,proto3" json:"navigation_item,omitempty"`
	Title            string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"` // navigation name from table_navigation
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UserBookmark) Reset() {
	*x = UserBookmark{}
	mi := &file_sickrock_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserBookmark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBookmark) ProtoMessage() {}

func (x *UserBookmark) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBookmark.ProtoReflect.Descriptor instead.
func (*UserBookmark) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{92}
}

func (x *UserBookmark) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserBookmark) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserBookmark) GetNavigationItemId() int32 {
	if x != nil {
		return x.NavigationItemId
	}
	return 0
}

func (x *UserBookmark) GetNavigationItem() *NavigationItem {
	if x != nil {
		return x.NavigationItem
	}
	return nil
}

func (x *UserBookmark) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// API Key Management
type CreateAPIKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // Unix timestamp, 0 for no expiration
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAPIKeyRequest) Reset() {
	*x = CreateAPIKeyRequest{}
	mi := &file_sickrock_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAPIKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAPIKeyRequest) ProtoMessage() {}

func (x *CreateAPIKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAPIKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateAPIKeyRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{93}
}

func (x *CreateAPIKeyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAPIKeyRequest) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type CreateAPIKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ApiKey        string                 `protobuf:"bytes,3,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"` // The actual API key (only shown once)
	ApiKeyId      int32                  `protobuf:"varint,4,opt,name=api_key_id,json=apiKeyId,proto3" json:"api_key_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAPIKeyResponse) Reset() {
	*x = CreateAPIKeyResponse{}
	mi := &file_sickrock_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAPIKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAPIKeyResponse) ProtoMessage() {}

func (x *CreateAPIKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAPIKeyResponse.ProtoReflect.Descriptor instead.
func (*CreateAPIKeyResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{94}
}

func (x *CreateAPIKeyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateAPIKeyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateAPIKeyResponse) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *CreateAPIKeyResponse) GetApiKeyId() int32 {
	if x != nil {
		return x.ApiKeyId
	}
	return 0
}

type GetAPIKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAPIKeysRequest) Reset() {
	*x = GetAPIKeysRequest{}
	mi := &file_sickrock_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAPIKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAPIKeysRequest) ProtoMessage() {}

func (x *GetAPIKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAPIKeysRequest.ProtoReflect.Descriptor instead.
func (*GetAPIKeysRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{95}
}

type GetAPIKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiKeys       []*APIKey              `protobuf:"bytes,1,rep,name=api_keys,json=apiKeys,proto3" json:"api_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAPIKeysResponse) Reset() {
	*x = GetAPIKeysResponse{}
	mi := &file_sickrock_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAPIKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAPIKeysResponse) ProtoMessage() {}

func (x *GetAPIKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAPIKeysResponse.ProtoReflect.Descriptor instead.
func (*GetAPIKeysResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{96}
}

func (x *GetAPIKeysResponse) GetApiKeys() []*APIKey {
	if x != nil {
		return x.ApiKeys
	}
	return nil
}

type DeleteAPIKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiKeyId      int32                  `protobuf:"varint,1,opt,name=api_key_id,json=apiKeyId,proto3" json:"api_key_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAPIKeyRequest) Reset() {
	*x = DeleteAPIKeyRequest{}
	mi := &file_sickrock_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAPIKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAPIKeyRequest) ProtoMessage() {}

func (x *DeleteAPIKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAPIKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteAPIKeyRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{97}
}

func (x *DeleteAPIKeyRequest) GetApiKeyId() int32 {
	if x != nil {
		return x.ApiKeyId
	}
	return 0
}

type DeleteAPIKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAPIKeyResponse) Reset() {
	*x = DeleteAPIKeyResponse{}
	mi := &file_sickrock_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAPIKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAPIKeyResponse) ProtoMessage() {}

func (x *DeleteAPIKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAPIKeyResponse.ProtoReflect.Descriptor instead.
func (*DeleteAPIKeyResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{98}
}

func (x *DeleteAPIKeyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteAPIKeyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeactivateAPIKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiKeyId      int32                  `protobuf:"varint,1,opt,name=api_key_id,json=apiKeyId,proto3" json:"api_key_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeactivateAPIKeyRequest) Reset() {
	*x = DeactivateAPIKeyRequest{}
	mi := &file_sickrock_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeactivateAPIKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateAPIKeyRequest) ProtoMessage() {}

func (x *DeactivateAPIKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateAPIKeyRequest.ProtoReflect.Descriptor instead.
func (*DeactivateAPIKeyRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{99}
}

func (x *DeactivateAPIKeyRequest) GetApiKeyId() int32 {
	if x != nil {
		return x.ApiKeyId
	}
	return 0
}

type DeactivateAPIKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeactivateAPIKeyResponse) Reset() {
	*x = DeactivateAPIKeyResponse{}
	mi := &file_sickrock_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeactivateAPIKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateAPIKeyResponse) ProtoMessage() {}

func (x *DeactivateAPIKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateAPIKeyResponse.ProtoReflect.Descriptor instead.
func (*DeactivateAPIKeyResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{100}
}

func (x *DeactivateAPIKeyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeactivateAPIKeyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type APIKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastUsedAt    int64                  `protobuf:"varint,5,opt,name=last_used_at,json=lastUsedAt,proto3" json:"last_used_at,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,6,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	IsActive      bool                   `protobuf:"varint,7,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *APIKey) Reset() {
	*x = APIKey{}
	mi := &file_sickrock_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKey) ProtoMessage() {}

func (x *APIKey) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIKey.ProtoReflect.Descriptor instead.
func (*APIKey) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{101}
}

func (x *APIKey) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *APIKey) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *APIKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *APIKey) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *APIKey) GetLastUsedAt() int64 {
	if x != nil {
		return x.LastUsedAt
	}
	return 0
}

func (x *APIKey) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *APIKey) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

// Conditional Formatting Rules
type ConditionalFormattingRule struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TableName      string                 `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	ColumnName     string                 `protobuf:"bytes,3,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	ConditionType  string                 `protobuf:"bytes,4,opt,name=condition_type,json=conditionType,proto3" json:"condition_type,omitempty"`
	ConditionValue string                 `protobuf:"bytes,5,opt,name=condition_value,json=conditionValue,proto3" json:"condition_value,omitempty"`
	FormatType     string                 `protobuf:"bytes,6,opt,name=format_type,json=formatType,proto3" json:"format_type,omitempty"`
	FormatValue    string                 `protobuf:"bytes,7,opt,name=format_value,json=formatValue,proto3" json:"format_value,omitempty"`
	Priority       int32                  `protobuf:"varint,8,opt,name=priority,proto3" json:"priority,omitempty"`
	IsActive       bool                   `protobuf:"varint,9,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	SrCreated      int64                  `protobuf:"varint,10,opt,name=sr_created,json=srCreated,proto3" json:"sr_created,omitempty"`
	UpdatedAtUnix  int64                  `protobuf:"varint,11,opt,name=updated_at_unix,json=updatedAtUnix,proto3" json:"updated_at_unix,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConditionalFormattingRule) Reset() {
	*x = ConditionalFormattingRule{}
	mi := &file_sickrock_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConditionalFormattingRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionalFormattingRule) ProtoMessage() {}

func (x *ConditionalFormattingRule) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionalFormattingRule.ProtoReflect.Descriptor instead.
func (*ConditionalFormattingRule) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{102}
}

func (x *ConditionalFormattingRule) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConditionalFormattingRule) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *ConditionalFormattingRule) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *ConditionalFormattingRule) GetConditionType() string {
	if x != nil {
		return x.ConditionType
	}
	return ""
}

func (x *ConditionalFormattingRule) GetConditionValue() string {
	if x != nil {
		return x.ConditionValue
	}
	return ""
}

func (x *ConditionalFormattingRule) GetFormatType() string {
	if x != nil {
		return x.FormatType
	}
	return ""
}

func (x *ConditionalFormattingRule) GetFormatValue() string {
	if x != nil {
		return x.FormatValue
	}
	return ""
}

func (x *ConditionalFormattingRule) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *ConditionalFormattingRule) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *ConditionalFormattingRule) GetSrCreated() int64 {
	if x != nil {
		return x.SrCreated
	}
	return 0
}

func (x *ConditionalFormattingRule) GetUpdatedAtUnix() int64 {
	if x != nil {
		return x.UpdatedAtUnix
	}
	return 0
}

type GetConditionalFormattingRulesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableName     string                 `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"` // Optional: filter by table name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConditionalFormattingRulesRequest) Reset() {
	*x = GetConditionalFormattingRulesRequest{}
	mi := &file_sickrock_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConditionalFormattingRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConditionalFormattingRulesRequest) ProtoMessage() {}

func (x *GetConditionalFormattingRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConditionalFormattingRulesRequest.ProtoReflect.Descriptor instead.
func (*GetConditionalFormattingRulesRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{103}
}

func (x *GetConditionalFormattingRulesRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type GetConditionalFormattingRulesResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Rules         []*ConditionalFormattingRule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConditionalFormattingRulesResponse) Reset() {
	*x = GetConditionalFormattingRulesResponse{}
	mi := &file_sickrock_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConditionalFormattingRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConditionalFormattingRulesResponse) ProtoMessage() {}

func (x *GetConditionalFormattingRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConditionalFormattingRulesResponse.ProtoReflect.Descriptor instead.
func (*GetConditionalFormattingRulesResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{104}
}

func (x *GetConditionalFormattingRulesResponse) GetRules() []*ConditionalFormattingRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type CreateConditionalFormattingRuleRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TableName      string                 `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	ColumnName     string                 `protobuf:"bytes,2,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	ConditionType  string                 `protobuf:"bytes,3,opt,name=condition_type,json=conditionType,proto3" json:"condition_type,omitempty"`
	ConditionValue string                 `protobuf:"bytes,4,opt,name=condition_value,json=conditionValue,proto3" json:"condition_value,omitempty"`
	FormatType     string                 `protobuf:"bytes,5,opt,name=format_type,json=formatType,proto3" json:"format_type,omitempty"`
	FormatValue    string                 `protobuf:"bytes,6,opt,name=format_value,json=formatValue,proto3" json:"format_value,omitempty"`
	Priority       int32                  `protobuf:"varint,7,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateConditionalFormattingRuleRequest) Reset() {
	*x = CreateConditionalFormattingRuleRequest{}
	mi := &file_sickrock_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConditionalFormattingRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConditionalFormattingRuleRequest) ProtoMessage() {}

func (x *CreateConditionalFormattingRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConditionalFormattingRuleRequest.ProtoReflect.Descriptor instead.
func (*CreateConditionalFormattingRuleRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{105}
}

func (x *CreateConditionalFormattingRuleRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *CreateConditionalFormattingRuleRequest) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *CreateConditionalFormattingRuleRequest) GetConditionType() string {
	if x != nil {
		return x.ConditionType
	}
	return ""
}

func (x *CreateConditionalFormattingRuleRequest) GetConditionValue() string {
	if x != nil {
		return x.ConditionValue
	}
	return ""
}

func (x *CreateConditionalFormattingRuleRequest) GetFormatType() string {
	if x != nil {
		return x.FormatType
	}
	return ""
}

func (x *CreateConditionalFormattingRuleRequest) GetFormatValue() string {
	if x != nil {
		return x.FormatValue
	}
	return ""
}

func (x *CreateConditionalFormattingRuleRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type CreateConditionalFormattingRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RuleId        int32                  `protobuf:"varint,3,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConditionalFormattingRuleResponse) Reset() {
	*x = CreateConditionalFormattingRuleResponse{}
	mi := &file_sickrock_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConditionalFormattingRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConditionalFormattingRuleResponse) ProtoMessage() {}

func (x *CreateConditionalFormattingRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConditionalFormattingRuleResponse.ProtoReflect.Descriptor instead.
func (*CreateConditionalFormattingRuleResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{106}
}

func (x *CreateConditionalFormattingRuleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateConditionalFormattingRuleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateConditionalFormattingRuleResponse) GetRuleId() int32 {
	if x != nil {
		return x.RuleId
	}
	return 0
}

type DeleteConditionalFormattingRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RuleId        int32                  `protobuf:"varint,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteConditionalFormattingRuleRequest) Reset() {
	*x = DeleteConditionalFormattingRuleRequest{}
	mi := &file_sickrock_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConditionalFormattingRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConditionalFormattingRuleRequest) ProtoMessage() {}

func (x *DeleteConditionalFormattingRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConditionalFormattingRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteConditionalFormattingRuleRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{107}
}

func (x *DeleteConditionalFormattingRuleRequest) GetRuleId() int32 {
	if x != nil {
		return x.RuleId
	}
	return 0
}

type DeleteConditionalFormattingRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteConditionalFormattingRuleResponse) Reset() {
	*x = DeleteConditionalFormattingRuleResponse{}
	mi := &file_sickrock_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConditionalFormattingRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConditionalFormattingRuleResponse) ProtoMessage() {}

func (x *DeleteConditionalFormattingRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConditionalFormattingRuleResponse.ProtoReflect.Descriptor instead.
func (*DeleteConditionalFormattingRuleResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{108}
}

func (x *DeleteConditionalFormattingRuleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteConditionalFormattingRuleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateConditionalFormattingRuleRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RuleId         int32                  `protobuf:"varint,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	TableName      string                 `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	ColumnName     string                 `protobuf:"bytes,3,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	ConditionType  string                 `protobuf:"bytes,4,opt,name=condition_type,json=conditionType,proto3" json:"condition_type,omitempty"`
	ConditionValue string                 `protobuf:"bytes,5,opt,name=condition_value,json=conditionValue,proto3" json:"condition_value,omitempty"`
	FormatType     string                 `protobuf:"bytes,6,opt,name=format_type,json=formatType,proto3" json:"format_type,omitempty"`
	FormatValue    string                 `protobuf:"bytes,7,opt,name=format_value,json=formatValue,proto3" json:"format_value,omitempty"`
	Priority       int32                  `protobuf:"varint,8,opt,name=priority,proto3" json:"priority,omitempty"`
	IsActive       bool                   `protobuf:"varint,9,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateConditionalFormattingRuleRequest) Reset() {
	*x = UpdateConditionalFormattingRuleRequest{}
	mi := &file_sickrock_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConditionalFormattingRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConditionalFormattingRuleRequest) ProtoMessage() {}

func (x *UpdateConditionalFormattingRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConditionalFormattingRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateConditionalFormattingRuleRequest) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{109}
}

func (x *UpdateConditionalFormattingRuleRequest) GetRuleId() int32 {
	if x != nil {
		return x.RuleId
	}
	return 0
}

func (x *UpdateConditionalFormattingRuleRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *UpdateConditionalFormattingRuleRequest) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *UpdateConditionalFormattingRuleRequest) GetConditionType() string {
	if x != nil {
		return x.ConditionType
	}
	return ""
}

func (x *UpdateConditionalFormattingRuleRequest) GetConditionValue() string {
	if x != nil {
		return x.ConditionValue
	}
	return ""
}

func (x *UpdateConditionalFormattingRuleRequest) GetFormatType() string {
	if x != nil {
		return x.FormatType
	}
	return ""
}

func (x *UpdateConditionalFormattingRuleRequest) GetFormatValue() string {
	if x != nil {
		return x.FormatValue
	}
	return ""
}

func (x *UpdateConditionalFormattingRuleRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *UpdateConditionalFormattingRuleRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type UpdateConditionalFormattingRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateConditionalFormattingRuleResponse) Reset() {
	*x = UpdateConditionalFormattingRuleResponse{}
	mi := &file_sickrock_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConditionalFormattingRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConditionalFormattingRuleResponse) ProtoMessage() {}

func (x *UpdateConditionalFormattingRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sickrock_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConditionalFormattingRuleResponse.ProtoReflect.Descriptor instead.
func (*UpdateConditionalFormattingRuleResponse) Descriptor() ([]byte, []int) {
	return file_sickrock_proto_rawDescGZIP(), []int{110}
}

func (x *UpdateConditionalFormattingRuleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateConditionalFormattingRuleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_sickrock_proto protoreflect.FileDescriptor

const file_sickrock_proto_rawDesc = "" +
	"\n" +
	"\x0esickrock.proto\x12\bsickrock\"'\n" +
	"\vPingRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"O\n" +
	"\fPingResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12%\n" +
	"\x0etimestamp_unix\x18\x02 \x01(\x03R\rtimestampUnix\"\x1b\n" +
	"\x19GetNavigationLinksRequest\":\n" +
	"\x0eNavigationLink\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"L\n" +
	"\x1aGetNavigationLinksResponse\x12.\n" +
	"\x05links\x18\x01 \x03(\v2\x18.sickrock.NavigationLinkR\x05links\"\x1f\n" +
	"\x1dGetTableConfigurationsRequest\"\x82\x01\n" +
	"\x04Page\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x12\n" +
	"\x04slug\x18\x03 \x01(\tR\x04slug\x12\x18\n" +
	"\aordinal\x18\x04 \x01(\x05R\aordinal\x12\x12\n" +
	"\x04icon\x18\x05 \x01(\tR\x04icon\x12\x12\n" +
	"\x04view\x18\x06 \x01(\tR\x04view\"F\n" +
	"\x1eGetTableConfigurationsResponse\x12$\n" +
	"\x05pages\x18\x01 \x03(\v2\x0e.sickrock.PageR\x05pages\"g\n" +
	"\x1fCreateTableConfigurationRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bdatabase\x18\x02 \x01(\tR\bdatabase\x12\x14\n" +
	"\x05table\x18\x03 \x01(\tR\x05table\"V\n" +
	" CreateTableConfigurationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"6\n" +
	"\x18GetDatabaseTablesRequest\x12\x1a\n" +
	"\bdatabase\x18\x01 \x01(\tR\bdatabase\"\x9e\x01\n" +
	"\rDatabaseTable\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\x12+\n" +
	"\x11has_configuration\x18\x02 \x01(\bR\x10hasConfiguration\x12-\n" +
	"\x12configuration_name\x18\x03 \x01(\tR\x11configurationName\x12\x12\n" +
	"\x04view\x18\x04 \x01(\tR\x04view\"L\n" +
	"\x19GetDatabaseTablesResponse\x12/\n" +
	"\x06tables\x18\x01 \x03(\v2\x17.sickrock.DatabaseTableR\x06tables\"\x16\n" +
	"\x14GetNavigationRequest\"\xbe\x02\n" +
	"\x0eNavigationItem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x18\n" +
	"\aordinal\x18\x02 \x01(\x05R\aordinal\x12/\n" +
	"\x13table_configuration\x18\x03 \x01(\x05R\x12tableConfiguration\x12\x1d\n" +
	"\n" +
	"table_name\x18\x04 \x01(\tR\ttableName\x12\x1f\n" +
	"\vtable_title\x18\x05 \x01(\tR\n" +
	"tableTitle\x12\x12\n" +
	"\x04icon\x18\x06 \x01(\tR\x04icon\x12\x1d\n" +
	"\n" +
	"table_view\x18\a \x01(\tR\ttableView\x12!\n" +
	"\fdashboard_id\x18\b \x01(\x05R\vdashboardId\x12%\n" +
	"\x0edashboard_name\x18\t \x01(\tR\rdashboardName\x12\x14\n" +
	"\x05title\x18\n" +
	" \x01(\tR\x05title\"}\n" +
	"\x15GetNavigationResponse\x12.\n" +
	"\x05items\x18\x01 \x03(\v2\x18.sickrock.NavigationItemR\x05items\x124\n" +
	"\tbookmarks\x18\x02 \x03(\v2\x16.sickrock.UserBookmarkR\tbookmarks\"\xcc\x02\n" +
	"\x04Item\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"sr_created\x18\x02 \x01(\x03R\tsrCreated\x12.\n" +
	"\x13sr_created_relative\x18\x03 \x01(\x05R\x11srCreatedRelative\x12\x1d\n" +
	"\n" +
	"sr_updated\x18\x04 \x01(\x03R\tsrUpdated\x12.\n" +
	"\x13sr_updated_relative\x18\x05 \x01(\x05R\x11srUpdatedRelative\x12Q\n" +
	"\x11additional_fields\x18\x06 \x03(\v2$.sickrock.Item.AdditionalFieldsEntryR\x10additionalFields\x1aC\n" +
	"\x15AdditionalFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa2\x01\n" +
	"\x10ListItemsRequest\x12\x17\n" +
	"\atc_name\x18\x01 \x01(\tR\x06tcName\x12;\n" +
	"\x05where\x18\x02 \x03(\v2%.sickrock.ListItemsRequest.WhereEntryR\x05where\x1a8\n" +
	"\n" +
	"WhereEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"9\n" +
	"\x11ListItemsResponse\x12$\n" +
	"\x05items\x18\x01 \x03(\v2\x0e.sickrock.ItemR\x05items\"\xf0\x01\n" +
	"\x11CreateItemRequest\x12\x17\n" +
	"\apage_id\x18\x01 \x01(\tR\x06pageId\x12\x1d\n" +
	"\n" +
	"sr_created\x18\x02 \x01(\x03R\tsrCreated\x12^\n" +
	"\x11additional_fields\x18\x03 \x03(\v21.sickrock.CreateItemRequest.AdditionalFieldsEntryR\x10additionalFields\x1aC\n" +
	"\x15AdditionalFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"8\n" +
	"\x12CreateItemResponse\x12\"\n" +
	"\x04item\x18\x01 \x01(\v2\x0e.sickrock.ItemR\x04item\"9\n" +
	"\x0eGetItemRequest\x12\x17\n" +
	"\apage_id\x18\x01 \x01(\tR\x06pageId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"5\n" +
	"\x0fGetItemResponse\x12\"\n" +
	"\x04item\x18\x01 \x01(\v2\x0e.sickrock.ItemR\x04item\"\xdd\x01\n" +
	"\x0fEditItemRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\\\n" +
	"\x11additional_fields\x18\x02 \x03(\v2/.sickrock.EditItemRequest.AdditionalFieldsEntryR\x10additionalFields\x12\x17\n" +
	"\apage_id\x18\x03 \x01(\tR\x06pageId\x1aC\n" +
	"\x15AdditionalFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"6\n" +
	"\x10EditItemResponse\x12\"\n" +
	"\x04item\x18\x01 \x01(\v2\x0e.sickrock.ItemR\x04item\"<\n" +
	"\x11DeleteItemRequest\x12\x17\n" +
	"\apage_id\x18\x01 \x01(\tR\x06pageId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\".\n" +
	"\x12DeleteItemResponse\x12\x18\n" +
	"\adeleted\x18\x01 \x01(\bR\adeleted\"3\n" +
	"\x18GetTableStructureRequest\x12\x17\n" +
	"\apage_id\x18\x01 \x01(\tR\x06pageId\"\x8c\x01\n" +
	"\x05Field\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1a\n" +
	"\brequired\x18\x03 \x01(\bR\brequired\x12?\n" +
	"\x1cdefault_to_current_timestamp\x18\x04 \x01(\bR\x19defaultToCurrentTimestamp\"\x84\x01\n" +
	"\x19GetTableStructureResponse\x12'\n" +
	"\x06fields\x18\x01 \x03(\v2\x0f.sickrock.FieldR\x06fields\x12*\n" +
	"\x10CreateButtonText\x18\x02 \x01(\tR\x10CreateButtonText\x12\x12\n" +
	"\x04view\x18\x03 \x01(\tR\x04view\"W\n" +
	"\x15AddTableColumnRequest\x12\x17\n" +
	"\apage_id\x18\x01 \x01(\tR\x06pageId\x12%\n" +
	"\x05field\x18\x02 \x01(\v2\x0f.sickrock.FieldR\x05field\"\x93\x01\n" +
	"\x0fTableViewColumn\x12\x1f\n" +
	"\vcolumn_name\x18\x01 \x01(\tR\n" +
	"columnName\x12\x1d\n" +
	"\n" +
	"is_visible\x18\x02 \x01(\bR\tisVisible\x12!\n" +
	"\fcolumn_order\x18\x03 \x01(\x05R\vcolumnOrder\x12\x1d\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\tR\tsortOrder\"\x89\x01\n" +
	"\x16CreateTableViewRequest\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\x12\x1b\n" +
	"\tview_name\x18\x02 \x01(\tR\bviewName\x123\n" +
	"\acolumns\x18\x03 \x03(\v2\x19.sickrock.TableViewColumnR\acolumns\"M\n" +
	"\x17CreateTableViewResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xa2\x01\n" +
	"\x16UpdateTableViewRequest\x12\x17\n" +
	"\aview_id\x18\x01 \x01(\x05R\x06viewId\x12\x1d\n" +
	"\n" +
	"table_name\x18\x02 \x01(\tR\ttableName\x12\x1b\n" +
	"\tview_name\x18\x03 \x01(\tR\bviewName\x123\n" +
	"\acolumns\x18\x04 \x03(\v2\x19.sickrock.TableViewColumnR\acolumns\"M\n" +
	"\x17UpdateTableViewResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"5\n" +
	"\x14GetTableViewsRequest\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\"\xab\x01\n" +
	"\tTableView\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1d\n" +
	"\n" +
	"table_name\x18\x02 \x01(\tR\ttableName\x12\x1b\n" +
	"\tview_name\x18\x03 \x01(\tR\bviewName\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\x123\n" +
	"\acolumns\x18\x05 \x03(\v2\x19.sickrock.TableViewColumnR\acolumns\"B\n" +
	"\x15GetTableViewsResponse\x12)\n" +
	"\x05views\x18\x01 \x03(\v2\x13.sickrock.TableViewR\x05views\"1\n" +
	"\x16DeleteTableViewRequest\x12\x17\n" +
	"\aview_id\x18\x01 \x01(\x05R\x06viewId\"M\n" +
	"\x17DeleteTableViewResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xa1\x02\n" +
	"\n" +
	"ForeignKey\x12'\n" +
	"\x0fconstraint_name\x18\x01 \x01(\tR\x0econstraintName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x02 \x01(\tR\ttableName\x12\x1f\n" +
	"\vcolumn_name\x18\x03 \x01(\tR\n" +
	"columnName\x12)\n" +
	"\x10referenced_table\x18\x04 \x01(\tR\x0freferencedTable\x12+\n" +
	"\x11referenced_column\x18\x05 \x01(\tR\x10referencedColumn\x12(\n" +
	"\x10on_delete_action\x18\x06 \x01(\tR\x0eonDeleteAction\x12(\n" +
	"\x10on_update_action\x18\a \x01(\tR\x0eonUpdateAction\"\x85\x02\n" +
	"\x17CreateForeignKeyRequest\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\x12\x1f\n" +
	"\vcolumn_name\x18\x02 \x01(\tR\n" +
	"columnName\x12)\n" +
	"\x10referenced_table\x18\x03 \x01(\tR\x0freferencedTable\x12+\n" +
	"\x11referenced_column\x18\x04 \x01(\tR\x10referencedColumn\x12(\n" +
	"\x10on_delete_action\x18\x05 \x01(\tR\x0eonDeleteAction\x12(\n" +
	"\x10on_update_action\x18\x06 \x01(\tR\x0eonUpdateAction\"N\n" +
	"\x18CreateForeignKeyResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"6\n" +
	"\x15GetForeignKeysRequest\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\"Q\n" +
	"\x16GetForeignKeysResponse\x127\n" +
	"\fforeign_keys\x18\x01 \x03(\v2\x14.sickrock.ForeignKeyR\vforeignKeys\"B\n" +
	"\x17DeleteForeignKeyRequest\x12'\n" +
	"\x0fconstraint_name\x18\x01 \x01(\tR\x0econstraintName\"N\n" +
	"\x18DeleteForeignKeyResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"t\n" +
	"\x17ChangeColumnTypeRequest\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\x12\x1f\n" +
	"\vcolumn_name\x18\x02 \x01(\tR\n" +
	"columnName\x12\x19\n" +
	"\bnew_type\x18\x03 \x01(\tR\anewType\"N\n" +
	"\x18ChangeColumnTypeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"S\n" +
	"\x11DropColumnRequest\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\x12\x1f\n" +
	"\vcolumn_name\x18\x02 \x01(\tR\n" +
	"columnName\"H\n" +
	"\x12DropColumnResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x88\x01\n" +
	"\x17ChangeColumnNameRequest\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\x12&\n" +
	"\x0fold_column_name\x18\x02 \x01(\tR\roldColumnName\x12&\n" +
	"\x0fnew_column_name\x18\x03 \x01(\tR\rnewColumnName\"N\n" +
	"\x18ChangeColumnNameResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"4\n" +
	"\x1cGetMostRecentlyViewedRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\"\xbd\x01\n" +
	"\x12RecentlyViewedItem\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x19\n" +
	"\btable_id\x18\x02 \x01(\tR\atableId\x12\x12\n" +
	"\x04icon\x18\x03 \x01(\tR\x04icon\x12&\n" +
	"\x0fupdated_at_unix\x18\x04 \x01(\x03R\rupdatedAtUnix\x12\x1b\n" +
	"\titem_name\x18\x05 \x01(\tR\bitemName\x12\x1f\n" +
	"\vtable_title\x18\x06 \x01(\tR\n" +
	"tableTitle\"S\n" +
	"\x1dGetMostRecentlyViewedResponse\x122\n" +
	"\x05items\x18\x01 \x03(\v2\x1c.sickrock.RecentlyViewedItemR\x05items\"m\n" +
	"\tDashboard\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12<\n" +
	"\n" +
	"components\x18\x03 \x03(\v2\x1c.sickrock.DashboardComponentR\n" +
	"components\"\x16\n" +
	"\x14GetDashboardsRequest\"L\n" +
	"\x15GetDashboardsResponse\x123\n" +
	"\n" +
	"dashboards\x18\x01 \x03(\v2\x13.sickrock.DashboardR\n" +
	"dashboards\"\xa6\x01\n" +
	"\x12DashboardComponent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"dataString\x18\x03 \x01(\tR\n" +
	"dataString\x12\x1e\n" +
	"\n" +
	"dataNumber\x18\x04 \x01(\x02R\n" +
	"dataNumber\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\x12\x16\n" +
	"\x06suffix\x18\x06 \x01(\tR\x06suffix\"\x98\x01\n" +
	"\x16DashboardComponentRule\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1c\n" +
	"\tcomponent\x18\x02 \x01(\x05R\tcomponent\x12\x18\n" +
	"\aordinal\x18\x03 \x01(\x05R\aordinal\x12\x1c\n" +
	"\toperation\x18\x04 \x01(\tR\toperation\x12\x18\n" +
	"\aoperand\x18\x05 \x01(\tR\aoperand\"A\n" +
	"!GetDashboardComponentRulesRequest\x12\x1c\n" +
	"\tcomponent\x18\x01 \x01(\x05R\tcomponent\"\\\n" +
	"\"GetDashboardComponentRulesResponse\x126\n" +
	"\x05rules\x18\x01 \x03(\v2 .sickrock.DashboardComponentRuleR\x05rules\"\x95\x01\n" +
	"#CreateDashboardComponentRuleRequest\x12\x1c\n" +
	"\tcomponent\x18\x01 \x01(\x05R\tcomponent\x12\x18\n" +
	"\aordinal\x18\x02 \x01(\x05R\aordinal\x12\x1c\n" +
	"\toperation\x18\x03 \x01(\tR\toperation\x12\x18\n" +
	"\aoperand\x18\x04 \x01(\tR\aoperand\"\\\n" +
	"$CreateDashboardComponentRuleResponse\x124\n" +
	"\x04rule\x18\x01 \x01(\v2 .sickrock.DashboardComponentRuleR\x04rule\"\r\n" +
	"\vInitRequest\"m\n" +
	"\fInitResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x16\n" +
	"\x06commit\x18\x02 \x01(\tR\x06commit\x12\x12\n" +
	"\x04date\x18\x03 \x01(\tR\x04date\x12\x17\n" +
	"\adb_name\x18\x04 \x01(\tR\x06dbName\"F\n" +
	"\fLoginRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"x\n" +
	"\rLoginResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\x03R\texpiresAt\"\x0f\n" +
	"\rLogoutRequest\"D\n" +
	"\x0eLogoutResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"Y\n" +
	"\x18ResetUserPasswordRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12!\n" +
	"\fnew_password\x18\x02 \x01(\tR\vnewPassword\"O\n" +
	"\x19ResetUserPasswordResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\",\n" +
	"\x14ValidateTokenRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"\x8d\x01\n" +
	"\x15ValidateTokenResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\x03R\texpiresAt\x12#\n" +
	"\rinitial_route\x18\x04 \x01(\tR\finitialRoute\"\x1b\n" +
	"\x19GenerateDeviceCodeRequest\"O\n" +
	"\x1aGenerateDeviceCodeResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\x03R\texpiresAt\",\n" +
	"\x16ClaimDeviceCodeRequest\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\"\x82\x01\n" +
	"\x17ClaimDeviceCodeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\x03R\texpiresAt\",\n" +
	"\x16CheckDeviceCodeRequest\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\"\x9a\x01\n" +
	"\x17CheckDeviceCodeResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12\x18\n" +
	"\aclaimed\x18\x02 \x01(\bR\aclaimed\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\x03R\texpiresAt\x12\x14\n" +
	"\x05token\x18\x04 \x01(\tR\x05token\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\"1\n" +
	"\x1bGetDeviceCodeSessionRequest\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\"\xa3\x01\n" +
	"\x1cGetDeviceCodeSessionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\x03R\texpiresAt\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\"\x16\n" +
	"\x14GetSystemInfoRequest\"C\n" +
	"\x15GetSystemInfoResponse\x12*\n" +
	"\x11approx_total_rows\x18\x01 \x01(\x03R\x0fapproxTotalRows\"\x19\n" +
	"\x17GetUserBookmarksRequest\"P\n" +
	"\x18GetUserBookmarksResponse\x124\n" +
	"\tbookmarks\x18\x01 \x03(\v2\x16.sickrock.UserBookmarkR\tbookmarks\"I\n" +
	"\x19CreateUserBookmarkRequest\x12,\n" +
	"\x12navigation_item_id\x18\x01 \x01(\x05R\x10navigationItemId\"P\n" +
	"\x1aCreateUserBookmarkResponse\x122\n" +
	"\bbookmark\x18\x01 \x01(\v2\x16.sickrock.UserBookmarkR\bbookmark\"<\n" +
	"\x19DeleteUserBookmarkRequest\x12\x1f\n" +
	"\vbookmark_id\x18\x01 \x01(\x05R\n" +
	"bookmarkId\"6\n" +
	"\x1aDeleteUserBookmarkResponse\x12\x18\n" +
	"\adeleted\x18\x01 \x01(\bR\adeleted\"\xbe\x01\n" +
	"\fUserBookmark\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\x12,\n" +
	"\x12navigation_item_id\x18\x03 \x01(\x05R\x10navigationItemId\x12A\n" +
	"\x0fnavigation_item\x18\x04 \x01(\v2\x18.sickrock.NavigationItemR\x0enavigationItem\x12\x14\n" +
	"\x05title\x18\x05 \x01(\tR\x05title\"H\n" +
	"\x13CreateAPIKeyRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\x03R\texpiresAt\"\x81\x01\n" +
	"\x14CreateAPIKeyResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x17\n" +
	"\aapi_key\x18\x03 \x01(\tR\x06apiKey\x12\x1c\n" +
	"\n" +
	"api_key_id\x18\x04 \x01(\x05R\bapiKeyId\"\x13\n" +
	"\x11GetAPIKeysRequest\"A\n" +
	"\x12GetAPIKeysResponse\x12+\n" +
	"\bapi_keys\x18\x01 \x03(\v2\x10.sickrock.APIKeyR\aapiKeys\"3\n" +
	"\x13DeleteAPIKeyRequest\x12\x1c\n" +
	"\n" +
	"api_key_id\x18\x01 \x01(\x05R\bapiKeyId\"J\n" +
	"\x14DeleteAPIKeyResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"7\n" +
	"\x17DeactivateAPIKeyRequest\x12\x1c\n" +
	"\n" +
	"api_key_id\x18\x01 \x01(\x05R\bapiKeyId\"N\n" +
	"\x18DeactivateAPIKeyResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xc2\x01\n" +
	"\x06APIKey\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12 \n" +
	"\flast_used_at\x18\x05 \x01(\x03R\n" +
	"lastUsedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x06 \x01(\x03R\texpiresAt\x12\x1b\n" +
	"\tis_active\x18\a \x01(\bR\bisActive\"\xff\x02\n" +
	"\x19ConditionalFormattingRule\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1d\n" +
	"\n" +
	"table_name\x18\x02 \x01(\tR\ttableName\x12\x1f\n" +
	"\vcolumn_name\x18\x03 \x01(\tR\n" +
	"columnName\x12%\n" +
	"\x0econdition_type\x18\x04 \x01(\tR\rconditionType\x12'\n" +
	"\x0fcondition_value\x18\x05 \x01(\tR\x0econditionValue\x12\x1f\n" +
	"\vformat_type\x18\x06 \x01(\tR\n" +
	"formatType\x12!\n" +
	"\fformat_value\x18\a \x01(\tR\vformatValue\x12\x1a\n" +
	"\bpriority\x18\b \x01(\x05R\bpriority\x12\x1b\n" +
	"\tis_active\x18\t \x01(\bR\bisActive\x12\x1d\n" +
	"\n" +
	"sr_created\x18\n" +
	" \x01(\x03R\tsrCreated\x12&\n" +
	"\x0fupdated_at_unix\x18\v \x01(\x03R\rupdatedAtUnix\"E\n" +
	"$GetConditionalFormattingRulesRequest\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\"b\n" +
	"%GetConditionalFormattingRulesResponse\x129\n" +
	"\x05rules\x18\x01 \x03(\v2#.sickrock.ConditionalFormattingRuleR\x05rules\"\x98\x02\n" +
	"&CreateConditionalFormattingRuleRequest\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\x12\x1f\n" +
	"\vcolumn_name\x18\x02 \x01(\tR\n" +
	"columnName\x12%\n" +
	"\x0econdition_type\x18\x03 \x01(\tR\rconditionType\x12'\n" +
	"\x0fcondition_value\x18\x04 \x01(\tR\x0econditionValue\x12\x1f\n" +
	"\vformat_type\x18\x05 \x01(\tR\n" +
	"formatType\x12!\n" +
	"\fformat_value\x18\x06 \x01(\tR\vformatValue\x12\x1a\n" +
	"\bpriority\x18\a \x01(\x05R\bpriority\"v\n" +
	"'CreateConditionalFormattingRuleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x17\n" +
	"\arule_id\x18\x03 \x01(\x05R\x06ruleId\"A\n" +
	"&DeleteConditionalFormattingRuleRequest\x12\x17\n" +
	"\arule_id\x18\x01 \x01(\x05R\x06ruleId\"]\n" +
	"'DeleteConditionalFormattingRuleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xce\x02\n" +
	"&UpdateConditionalFormattingRuleRequest\x12\x17\n" +
	"\arule_id\x18\x01 \x01(\x05R\x06ruleId\x12\x1d\n" +
	"\n" +
	"table_name\x18\x02 \x01(\tR\ttableName\x12\x1f\n" +
	"\vcolumn_name\x18\x03 \x01(\tR\n" +
	"columnName\x12%\n" +
	"\x0econdition_type\x18\x04 \x01(\tR\rconditionType\x12'\n" +
	"\x0fcondition_value\x18\x05 \x01(\tR\x0econditionValue\x12\x1f\n" +
	"\vformat_type\x18\x06 \x01(\tR\n" +
	"formatType\x12!\n" +
	"\fformat_value\x18\a \x01(\tR\vformatValue\x12\x1a\n" +
	"\bpriority\x18\b \x01(\x05R\bpriority\x12\x1b\n" +
	"\tis_active\x18\t \x01(\bR\bisActive\"]\n" +
	"'UpdateConditionalFormattingRuleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\x80\"\n" +
	"\bSickRock\x125\n" +
	"\x04Init\x12\x15.sickrock.InitRequest\x1a\x16.sickrock.InitResponse\x125\n" +
	"\x04Ping\x12\x15.sickrock.PingRequest\x1a\x16.sickrock.PingResponse\x128\n" +
	"\x05Login\x12\x16.sickrock.LoginRequest\x1a\x17.sickrock.LoginResponse\x12;\n" +
	"\x06Logout\x12\x17.sickrock.LogoutRequest\x1a\x18.sickrock.LogoutResponse\x12P\n" +
	"\rValidateToken\x12\x1e.sickrock.ValidateTokenRequest\x1a\x1f.sickrock.ValidateTokenResponse\x12\\\n" +
	"\x11ResetUserPassword\x12\".sickrock.ResetUserPasswordRequest\x1a#.sickrock.ResetUserPasswordResponse\x12_\n" +
	"\x12GenerateDeviceCode\x12#.sickrock.GenerateDeviceCodeRequest\x1a$.sickrock.GenerateDeviceCodeResponse\x12V\n" +
	"\x0fClaimDeviceCode\x12 .sickrock.ClaimDeviceCodeRequest\x1a!.sickrock.ClaimDeviceCodeResponse\x12V\n" +
	"\x0fCheckDeviceCode\x12 .sickrock.CheckDeviceCodeRequest\x1a!.sickrock.CheckDeviceCodeResponse\x12e\n" +
	"\x14GetDeviceCodeSession\x12%.sickrock.GetDeviceCodeSessionRequest\x1a&.sickrock.GetDeviceCodeSessionResponse\x12_\n" +
	"\x12GetNavigationLinks\x12#.sickrock.GetNavigationLinksRequest\x1a$.sickrock.GetNavigationLinksResponse\x12k\n" +
	"\x16GetTableConfigurations\x12'.sickrock.GetTableConfigurationsRequest\x1a(.sickrock.GetTableConfigurationsResponse\x12q\n" +
	"\x18CreateTableConfiguration\x12).sickrock.CreateTableConfigurationRequest\x1a*.sickrock.CreateTableConfigurationResponse\x12\\\n" +
	"\x11GetDatabaseTables\x12\".sickrock.GetDatabaseTablesRequest\x1a#.sickrock.GetDatabaseTablesResponse\x12P\n" +
	"\rGetNavigation\x12\x1e.sickrock.GetNavigationRequest\x1a\x1f.sickrock.GetNavigationResponse\x12D\n" +
	"\tListItems\x12\x1a.sickrock.ListItemsRequest\x1a\x1b.sickrock.ListItemsResponse\x12G\n" +
	"\n" +
	"CreateItem\x12\x1b.sickrock.CreateItemRequest\x1a\x1c.sickrock.CreateItemResponse\x12>\n" +
	"\aGetItem\x12\x18.sickrock.GetItemRequest\x1a\x19.sickrock.GetItemResponse\x12A\n" +
	"\bEditItem\x12\x19.sickrock.EditItemRequest\x1a\x1a.sickrock.EditItemResponse\x12G\n" +
	"\n" +
	"DeleteItem\x12\x1b.sickrock.DeleteItemRequest\x1a\x1c.sickrock.DeleteItemResponse\x12\\\n" +
	"\x11GetTableStructure\x12\".sickrock.GetTableStructureRequest\x1a#.sickrock.GetTableStructureResponse\x12V\n" +
	"\x0eAddTableColumn\x12\x1f.sickrock.AddTableColumnRequest\x1a#.sickrock.GetTableStructureResponse\x12V\n" +
	"\x0fCreateTableView\x12 .sickrock.CreateTableViewRequest\x1a!.sickrock.CreateTableViewResponse\x12V\n" +
	"\x0fUpdateTableView\x12 .sickrock.UpdateTableViewRequest\x1a!.sickrock.UpdateTableViewResponse\x12P\n" +
	"\rGetTableViews\x12\x1e.sickrock.GetTableViewsRequest\x1a\x1f.sickrock.GetTableViewsResponse\x12V\n" +
	"\x0fDeleteTableView\x12 .sickrock.DeleteTableViewRequest\x1a!.sickrock.DeleteTableViewResponse\x12Y\n" +
	"\x10CreateForeignKey\x12!.sickrock.CreateForeignKeyRequest\x1a\".sickrock.CreateForeignKeyResponse\x12S\n" +
	"\x0eGetForeignKeys\x12\x1f.sickrock.GetForeignKeysRequest\x1a .sickrock.GetForeignKeysResponse\x12Y\n" +
	"\x10DeleteForeignKey\x12!.sickrock.DeleteForeignKeyRequest\x1a\".sickrock.DeleteForeignKeyResponse\x12Y\n" +
	"\x10ChangeColumnType\x12!.sickrock.ChangeColumnTypeRequest\x1a\".sickrock.ChangeColumnTypeResponse\x12G\n" +
	"\n" +
	"DropColumn\x12\x1b.sickrock.DropColumnRequest\x1a\x1c.sickrock.DropColumnResponse\x12Y\n" +
	"\x10ChangeColumnName\x12!.sickrock.ChangeColumnNameRequest\x1a\".sickrock.ChangeColumnNameResponse\x12h\n" +
	"\x15GetMostRecentlyViewed\x12&.sickrock.GetMostRecentlyViewedRequest\x1a'.sickrock.GetMostRecentlyViewedResponse\x12P\n" +
	"\rGetDashboards\x12\x1e.sickrock.GetDashboardsRequest\x1a\x1f.sickrock.GetDashboardsResponse\x12w\n" +
	"\x1aGetDashboardComponentRules\x12+.sickrock.GetDashboardComponentRulesRequest\x1a,.sickrock.GetDashboardComponentRulesResponse\x12}\n" +
	"\x1cCreateDashboardComponentRule\x12-.sickrock.CreateDashboardComponentRuleRequest\x1a..sickrock.CreateDashboardComponentRuleResponse\x12P\n" +
	"\rGetSystemInfo\x12\x1e.sickrock.GetSystemInfoRequest\x1a\x1f.sickrock.GetSystemInfoResponse\x12Y\n" +
	"\x10GetUserBookmarks\x12!.sickrock.GetUserBookmarksRequest\x1a\".sickrock.GetUserBookmarksResponse\x12_\n" +
	"\x12CreateUserBookmark\x12#.sickrock.CreateUserBookmarkRequest\x1a$.sickrock.CreateUserBookmarkResponse\x12_\n" +
	"\x12DeleteUserBookmark\x12#.sickrock.DeleteUserBookmarkRequest\x1a$.sickrock.DeleteUserBookmarkResponse\x12M\n" +
	"\fCreateAPIKey\x12\x1d.sickrock.CreateAPIKeyRequest\x1a\x1e.sickrock.CreateAPIKeyResponse\x12G\n" +
	"\n" +
	"GetAPIKeys\x12\x1b.sickrock.GetAPIKeysRequest\x1a\x1c.sickrock.GetAPIKeysResponse\x12M\n" +
	"\fDeleteAPIKey\x12\x1d.sickrock.DeleteAPIKeyRequest\x1a\x1e.sickrock.DeleteAPIKeyResponse\x12Y\n" +
	"\x10DeactivateAPIKey\x12!.sickrock.DeactivateAPIKeyRequest\x1a\".sickrock.DeactivateAPIKeyResponse\x12\x80\x01\n" +
	"\x1dGetConditionalFormattingRules\x12..sickrock.GetConditionalFormattingRulesRequest\x1a/.sickrock.GetConditionalFormattingRulesResponse\x12\x86\x01\n" +
	"\x1fCreateConditionalFormattingRule\x120.sickrock.CreateConditionalFormattingRuleRequest\x1a1.sickrock.CreateConditionalFormattingRuleResponse\x12\x86\x01\n" +
	"\x1fUpdateConditionalFormattingRule\x120.sickrock.UpdateConditionalFormattingRuleRequest\x1a1.sickrock.UpdateConditionalFormattingRuleResponse\x12\x86\x01\n" +
	"\x1fDeleteConditionalFormattingRule\x120.sickrock.DeleteConditionalFormattingRuleRequest\x1a1.sickrock.DeleteConditionalFormattingRuleResponseB\x91\x01\n" +
	"\fcom.sickrockB\rSickrockProtoP\x01Z2github.com/jamesread/SickRock/gen/proto;sickrockpb\xa2\x02\x03SXX\xaa\x02\bSickrock\xca\x02\bSickrock\xe2\x02\x14Sickrock\\GPBMetadata\xea\x02\bSickrockb\x06proto3"

var (
	file_sickrock_proto_rawDescOnce sync.Once
	file_sickrock_proto_rawDescData []byte
)

func file_sickrock_proto_rawDescGZIP() []byte {
	file_sickrock_proto_rawDescOnce.Do(func() {
		file_sickrock_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sickrock_proto_rawDesc), len(file_sickrock_proto_rawDesc)))
	})
	return file_sickrock_proto_rawDescData
}

var file_sickrock_proto_msgTypes = make([]protoimpl.MessageInfo, 115)
var file_sickrock_proto_goTypes = []any{
	(*PingRequest)(nil),                             // 0: sickrock.PingRequest
	(*PingResponse)(nil),                            // 1: sickrock.PingResponse
	(*GetNavigationLinksRequest)(nil),               // 2: sickrock.GetNavigationLinksRequest
	(*NavigationLink)(nil),                          // 3: sickrock.NavigationLink
	(*GetNavigationLinksResponse)(nil),              // 4: sickrock.GetNavigationLinksResponse
	(*GetTableConfigurationsRequest)(nil),           // 5: sickrock.GetTableConfigurationsRequest
	(*Page)(nil),                                    // 6: sickrock.Page
	(*GetTableConfigurationsResponse)(nil),          // 7: sickrock.GetTableConfigurationsResponse
	(*CreateTableConfigurationRequest)(nil),         // 8: sickrock.CreateTableConfigurationRequest
	(*CreateTableConfigurationResponse)(nil),        // 9: sickrock.CreateTableConfigurationResponse
	(*GetDatabaseTablesRequest)(nil),                // 10: sickrock.GetDatabaseTablesRequest
	(*DatabaseTable)(nil),                           // 11: sickrock.DatabaseTable
	(*GetDatabaseTablesResponse)(nil),               // 12: sickrock.GetDatabaseTablesResponse
	(*GetNavigationRequest)(nil),                    // 13: sickrock.GetNavigationRequest
	(*NavigationItem)(nil),                          // 14: sickrock.NavigationItem
	(*GetNavigationResponse)(nil),                   // 15: sickrock.GetNavigationResponse
	(*Item)(nil),                                    // 16: sickrock.Item
	(*ListItemsRequest)(nil),                        // 17: sickrock.ListItemsRequest
	(*ListItemsResponse)(nil),                       // 18: sickrock.ListItemsResponse
	(*CreateItemRequest)(nil),                       // 19: sickrock.CreateItemRequest
	(*CreateItemResponse)(nil),                      // 20: sickrock.CreateItemResponse
	(*GetItemRequest)(nil),                          // 21: sickrock.GetItemRequest
	(*GetItemResponse)(nil),                         // 22: sickrock.GetItemResponse
	(*EditItemRequest)(nil),                         // 23: sickrock.EditItemRequest
	(*EditItemResponse)(nil),                        // 24: sickrock.EditItemResponse
	(*DeleteItemRequest)(nil),                       // 25: sickrock.DeleteItemRequest
	(*DeleteItemResponse)(nil),                      // 26: sickrock.DeleteItemResponse
	(*GetTableStructureRequest)(nil),                // 27: sickrock.GetTableStructureRequest
	(*Field)(nil),                                   // 28: sickrock.Field
	(*GetTableStructureResponse)(nil),               // 29: sickrock.GetTableStructureResponse
	(*AddTableColumnRequest)(nil),                   // 30: sickrock.AddTableColumnRequest
	(*TableViewColumn)(nil),                         // 31: sickrock.TableViewColumn
	(*CreateTableViewRequest)(nil),                  // 32: sickrock.CreateTableViewRequest
	(*CreateTableViewResponse)(nil),                 // 33: sickrock.CreateTableViewResponse
	(*UpdateTableViewRequest)(nil),                  // 34: sickrock.UpdateTableViewRequest
	(*UpdateTableViewResponse)(nil),                 // 35: sickrock.UpdateTableViewResponse
	(*GetTableViewsRequest)(nil),                    // 36: sickrock.GetTableViewsRequest
	(*TableView)(nil),                               // 37: sickrock.TableView
	(*GetTableViewsResponse)(nil),                   // 38: sickrock.GetTableViewsResponse
	(*DeleteTableViewRequest)(nil),                  // 39: sickrock.DeleteTableViewRequest
	(*DeleteTableViewResponse)(nil),                 // 40: sickrock.DeleteTableViewResponse
	(*ForeignKey)(nil),                              // 41: sickrock.ForeignKey
	(*CreateForeignKeyRequest)(nil),                 // 42: sickrock.CreateForeignKeyRequest
	(*CreateForeignKeyResponse)(nil),                // 43: sickrock.CreateForeignKeyResponse
	(*GetForeignKeysRequest)(nil),                   // 44: sickrock.GetForeignKeysRequest
	(*GetForeignKeysResponse)(nil),                  // 45: sickrock.GetForeignKeysResponse
	(*DeleteForeignKeyRequest)(nil),                 // 46: sickrock.DeleteForeignKeyRequest
	(*DeleteForeignKeyResponse)(nil),                // 47: sickrock.DeleteForeignKeyResponse
	(*ChangeColumnTypeRequest)(nil),                 // 48: sickrock.ChangeColumnTypeRequest
	(*ChangeColumnTypeResponse)(nil),                // 49: sickrock.ChangeColumnTypeResponse
	(*DropColumnRequest)(nil),                       // 50: sickrock.DropColumnRequest
	(*DropColumnResponse)(nil),                      // 51: sickrock.DropColumnResponse
	(*ChangeColumnNameRequest)(nil),                 // 52: sickrock.ChangeColumnNameRequest
	(*ChangeColumnNameResponse)(nil),                // 53: sickrock.ChangeColumnNameResponse
	(*GetMostRecentlyViewedRequest)(nil),            // 54: sickrock.GetMostRecentlyViewedRequest
	(*RecentlyViewedItem)(nil),                      // 55: sickrock.RecentlyViewedItem
	(*GetMostRecentlyViewedResponse)(nil),           // 56: sickrock.GetMostRecentlyViewedResponse
	(*Dashboard)(nil),                               // 57: sickrock.Dashboard
	(*GetDashboardsRequest)(nil),                    // 58: sickrock.GetDashboardsRequest
	(*GetDashboardsResponse)(nil),                   // 59: sickrock.GetDashboardsResponse
	(*DashboardComponent)(nil),                      // 60: sickrock.DashboardComponent
	(*DashboardComponentRule)(nil),                  // 61: sickrock.DashboardComponentRule
	(*GetDashboardComponentRulesRequest)(nil),       // 62: sickrock.GetDashboardComponentRulesRequest
	(*GetDashboardComponentRulesResponse)(nil),      // 63: sickrock.GetDashboardComponentRulesResponse
	(*CreateDashboardComponentRuleRequest)(nil),     // 64: sickrock.CreateDashboardComponentRuleRequest
	(*CreateDashboardComponentRuleResponse)(nil),    // 65: sickrock.CreateDashboardComponentRuleResponse
	(*InitRequest)(nil),                             // 66: sickrock.InitRequest
	(*InitResponse)(nil),                            // 67: sickrock.InitResponse
	(*LoginRequest)(nil),                            // 68: sickrock.LoginRequest
	(*LoginResponse)(nil),                           // 69: sickrock.LoginResponse
	(*LogoutRequest)(nil),                           // 70: sickrock.LogoutRequest
	(*LogoutResponse)(nil),                          // 71: sickrock.LogoutResponse
	(*ResetUserPasswordRequest)(nil),                // 72: sickrock.ResetUserPasswordRequest
	(*ResetUserPasswordResponse)(nil),               // 73: sickrock.ResetUserPasswordResponse
	(*ValidateTokenRequest)(nil),                    // 74: sickrock.ValidateTokenRequest
	(*ValidateTokenResponse)(nil),                   // 75: sickrock.ValidateTokenResponse
	(*GenerateDeviceCodeRequest)(nil),               // 76: sickrock.GenerateDeviceCodeRequest
	(*GenerateDeviceCodeResponse)(nil),              // 77: sickrock.GenerateDeviceCodeResponse
	(*ClaimDeviceCodeRequest)(nil),                  // 78: sickrock.ClaimDeviceCodeRequest
	(*ClaimDeviceCodeResponse)(nil),                 // 79: sickrock.ClaimDeviceCodeResponse
	(*CheckDeviceCodeRequest)(nil),                  // 80: sickrock.CheckDeviceCodeRequest
	(*CheckDeviceCodeResponse)(nil),                 // 81: sickrock.CheckDeviceCodeResponse
	(*GetDeviceCodeSessionRequest)(nil),             // 82: sickrock.GetDeviceCodeSessionRequest
	(*GetDeviceCodeSessionResponse)(nil),            // 83: sickrock.GetDeviceCodeSessionResponse
	(*GetSystemInfoRequest)(nil),                    // 84: sickrock.GetSystemInfoRequest
	(*GetSystemInfoResponse)(nil),                   // 85: sickrock.GetSystemInfoResponse
	(*GetUserBookmarksRequest)(nil),                 // 86: sickrock.GetUserBookmarksRequest
	(*GetUserBookmarksResponse)(nil),                // 87: sickrock.GetUserBookmarksResponse
	(*CreateUserBookmarkRequest)(nil),               // 88: sickrock.CreateUserBookmarkRequest
	(*CreateUserBookmarkResponse)(nil),              // 89: sickrock.CreateUserBookmarkResponse
	(*DeleteUserBookmarkRequest)(nil),               // 90: sickrock.DeleteUserBookmarkRequest
	(*DeleteUserBookmarkResponse)(nil),              // 91: sickrock.DeleteUserBookmarkResponse
	(*UserBookmark)(nil),                            // 92: sickrock.UserBookmark
	(*CreateAPIKeyRequest)(nil),                     // 93: sickrock.CreateAPIKeyRequest
	(*CreateAPIKeyResponse)(nil),                    // 94: sickrock.CreateAPIKeyResponse
	(*GetAPIKeysRequest)(nil),                       // 95: sickrock.GetAPIKeysRequest
	(*GetAPIKeysResponse)(nil),                      // 96: sickrock.GetAPIKeysResponse
	(*DeleteAPIKeyRequest)(nil),                     // 97: sickrock.DeleteAPIKeyRequest
	(*DeleteAPIKeyResponse)(nil),                    // 98: sickrock.DeleteAPIKeyResponse
	(*DeactivateAPIKeyRequest)(nil),                 // 99: sickrock.DeactivateAPIKeyRequest
	(*DeactivateAPIKeyResponse)(nil),                // 100: sickrock.DeactivateAPIKeyResponse
	(*APIKey)(nil),                                  // 101: sickrock.APIKey
	(*ConditionalFormattingRule)(nil),               // 102: sickrock.ConditionalFormattingRule
	(*GetConditionalFormattingRulesRequest)(nil),    // 103: sickrock.GetConditionalFormattingRulesRequest
	(*GetConditionalFormattingRulesResponse)(nil),   // 104: sickrock.GetConditionalFormattingRulesResponse
	(*CreateConditionalFormattingRuleRequest)(nil),  // 105: sickrock.CreateConditionalFormattingRuleRequest
	(*CreateConditionalFormattingRuleResponse)(nil), // 106: sickrock.CreateConditionalFormattingRuleResponse
	(*DeleteConditionalFormattingRuleRequest)(nil),  // 107: sickrock.DeleteConditionalFormattingRuleRequest
	(*DeleteConditionalFormattingRuleResponse)(nil), // 108: sickrock.DeleteConditionalFormattingRuleResponse
	(*UpdateConditionalFormattingRuleRequest)(nil),  // 109: sickrock.UpdateConditionalFormattingRuleRequest
	(*UpdateConditionalFormattingRuleResponse)(nil), // 110: sickrock.UpdateConditionalFormattingRuleResponse
	nil, // 111: sickrock.Item.AdditionalFieldsEntry
	nil, // 112: sickrock.ListItemsRequest.WhereEntry
	nil, // 113: sickrock.CreateItemRequest.AdditionalFieldsEntry
	nil, // 114: sickrock.EditItemRequest.AdditionalFieldsEntry
}
var file_sickrock_proto_depIdxs = []int32{
	3,   // 0: sickrock.GetNavigationLinksResponse.links:type_name -> sickrock.NavigationLink
	6,   // 1: sickrock.GetTableConfigurationsResponse.pages:type_name -> sickrock.Page
	11,  // 2: sickrock.GetDatabaseTablesResponse.tables:type_name -> sickrock.DatabaseTable
	14,  // 3: sickrock.GetNavigationResponse.items:type_name -> sickrock.NavigationItem
	92,  // 4: sickrock.GetNavigationResponse.bookmarks:type_name -> sickrock.UserBookmark
	111, // 5: sickrock.Item.additional_fields:type_name -> sickrock.Item.AdditionalFieldsEntry
	112, // 6: sickrock.ListItemsRequest.where:type_name -> sickrock.ListItemsRequest.WhereEntry
	16,  // 7: sickrock.ListItemsResponse.items:type_name -> sickrock.Item
	113, // 8: sickrock.CreateItemRequest.additional_fields:type_name -> sickrock.CreateItemRequest.AdditionalFieldsEntry
	16,  // 9: sickrock.CreateItemResponse.item:type_name -> sickrock.Item
	16,  // 10: sickrock.GetItemResponse.item:type_name -> sickrock.Item
	114, // 11: sickrock.EditItemRequest.additional_fields:type_name -> sickrock.EditItemRequest.AdditionalFieldsEntry
	16,  // 12: sickrock.EditItemResponse.item:type_name -> sickrock.Item
	28,  // 13: sickrock.GetTableStructureResponse.fields:type_name -> sickrock.Field
	28,  // 14: sickrock.AddTableColumnRequest.field:type_name -> sickrock.Field
	31,  // 15: sickrock.CreateTableViewRequest.columns:type_name -> sickrock.TableViewColumn
	31,  // 16: sickrock.UpdateTableViewRequest.columns:type_name -> sickrock.TableViewColumn
	31,  // 17: sickrock.TableView.columns:type_name -> sickrock.TableViewColumn
	37,  // 18: sickrock.GetTableViewsResponse.views:type_name -> sickrock.TableView
	41,  // 19: sickrock.GetForeignKeysResponse.foreign_keys:type_name -> sickrock.ForeignKey
	55,  // 20: sickrock.GetMostRecentlyViewedResponse.items:type_name -> sickrock.RecentlyViewedItem
	60,  // 21: sickrock.Dashboard.components:type_name -> sickrock.DashboardComponent
	57,  // 22: sickrock.GetDashboardsResponse.dashboards:type_name -> sickrock.Dashboard
	61,  // 23: sickrock.GetDashboardComponentRulesResponse.rules:type_name -> sickrock.DashboardComponentRule
	61,  // 24: sickrock.CreateDashboardComponentRuleResponse.rule:type_name -> sickrock.DashboardComponentRule
	92,  // 25: sickrock.GetUserBookmarksResponse.bookmarks:type_name -> sickrock.UserBookmark
	92,  // 26: sickrock.CreateUserBookmarkResponse.bookmark:type_name -> sickrock.UserBookmark
	14,  // 27: sickrock.UserBookmark.navigation_item:type_name -> sickrock.NavigationItem
	101, // 28: sickrock.GetAPIKeysResponse.api_keys:type_name -> sickrock.APIKey
	102, // 29: sickrock.GetConditionalFormattingRulesResponse.rules:type_name -> sickrock.ConditionalFormattingRule
	66,  // 30: sickrock.SickRock.Init:input_type -> sickrock.InitRequest
	0,   // 31: sickrock.SickRock.Ping:input_type -> sickrock.PingRequest
	68,  // 32: sickrock.SickRock.Login:input_type -> sickrock.LoginRequest
	70,  // 33: sickrock.SickRock.Logout:input_type -> sickrock.LogoutRequest
	74,  // 34: sickrock.SickRock.ValidateToken:input_type -> sickrock.ValidateTokenRequest
	72,  // 35: sickrock.SickRock.ResetUserPassword:input_type -> sickrock.ResetUserPasswordRequest
	76,  // 36: sickrock.SickRock.GenerateDeviceCode:input_type -> sickrock.GenerateDeviceCodeRequest
	78,  // 37: sickrock.SickRock.ClaimDeviceCode:input_type -> sickrock.ClaimDeviceCodeRequest
	80,  // 38: sickrock.SickRock.CheckDeviceCode:input_type -> sickrock.CheckDeviceCodeRequest
	82,  // 39: sickrock.SickRock.GetDeviceCodeSession:input_type -> sickrock.GetDeviceCodeSessionRequest
	2,   // 40: sickrock.SickRock.GetNavigationLinks:input_type -> sickrock.GetNavigationLinksRequest
	5,   // 41: sickrock.SickRock.GetTableConfigurations:input_type -> sickrock.GetTableConfigurationsRequest
	8,   // 42: sickrock.SickRock.CreateTableConfiguration:input_type -> sickrock.CreateTableConfigurationRequest
	10,  // 43: sickrock.SickRock.GetDatabaseTables:input_type -> sickrock.GetDatabaseTablesRequest
	13,  // 44: sickrock.SickRock.GetNavigation:input_type -> sickrock.GetNavigationRequest
	17,  // 45: sickrock.SickRock.ListItems:input_type -> sickrock.ListItemsRequest
	19,  // 46: sickrock.SickRock.CreateItem:input_type -> sickrock.CreateItemRequest
	21,  // 47: sickrock.SickRock.GetItem:input_type -> sickrock.GetItemRequest
	23,  // 48: sickrock.SickRock.EditItem:input_type -> sickrock.EditItemRequest
	25,  // 49: sickrock.SickRock.DeleteItem:input_type -> sickrock.DeleteItemRequest
	27,  // 50: sickrock.SickRock.GetTableStructure:input_type -> sickrock.GetTableStructureRequest
	30,  // 51: sickrock.SickRock.AddTableColumn:input_type -> sickrock.AddTableColumnRequest
	32,  // 52: sickrock.SickRock.CreateTableView:input_type -> sickrock.CreateTableViewRequest
	34,  // 53: sickrock.SickRock.UpdateTableView:input_type -> sickrock.UpdateTableViewRequest
	36,  // 54: sickrock.SickRock.GetTableViews:input_type -> sickrock.GetTableViewsRequest
	39,  // 55: sickrock.SickRock.DeleteTableView:input_type -> sickrock.DeleteTableViewRequest
	42,  // 56: sickrock.SickRock.CreateForeignKey:input_type -> sickrock.CreateForeignKeyRequest
	44,  // 57: sickrock.SickRock.GetForeignKeys:input_type -> sickrock.GetForeignKeysRequest
	46,  // 58: sickrock.SickRock.DeleteForeignKey:input_type -> sickrock.DeleteForeignKeyRequest
	48,  // 59: sickrock.SickRock.ChangeColumnType:input_type -> sickrock.ChangeColumnTypeRequest
	50,  // 60: sickrock.SickRock.DropColumn:input_type -> sickrock.DropColumnRequest
	52,  // 61: sickrock.SickRock.ChangeColumnName:input_type -> sickrock.ChangeColumnNameRequest
	54,  // 62: sickrock.SickRock.GetMostRecentlyViewed:input_type -> sickrock.GetMostRecentlyViewedRequest
	58,  // 63: sickrock.SickRock.GetDashboards:input_type -> sickrock.GetDashboardsRequest
	62,  // 64: sickrock.SickRock.GetDashboardComponentRules:input_type -> sickrock.GetDashboardComponentRulesRequest
	64,  // 65: sickrock.SickRock.CreateDashboardComponentRule:input_type -> sickrock.CreateDashboardComponentRuleRequest
	84,  // 66: sickrock.SickRock.GetSystemInfo:input_type -> sickrock.GetSystemInfoRequest
	86,  // 67: sickrock.SickRock.GetUserBookmarks:input_type -> sickrock.GetUserBookmarksRequest
	88,  // 68: sickrock.SickRock.CreateUserBookmark:input_type -> sickrock.CreateUserBookmarkRequest
	90,  // 69: sickrock.SickRock.DeleteUserBookmark:input_type -> sickrock.DeleteUserBookmarkRequest
	93,  // 70: sickrock.SickRock.CreateAPIKey:input_type -> sickrock.CreateAPIKeyRequest
	95,  // 71: sickrock.SickRock.GetAPIKeys:input_type -> sickrock.GetAPIKeysRequest
	97,  // 72: sickrock.SickRock.DeleteAPIKey:input_type -> sickrock.DeleteAPIKeyRequest
	99,  // 73: sickrock.SickRock.DeactivateAPIKey:input_type -> sickrock.DeactivateAPIKeyRequest
	103, // 74: sickrock.SickRock.GetConditionalFormattingRules:input_type -> sickrock.GetConditionalFormattingRulesRequest
	105, // 75: sickrock.SickRock.CreateConditionalFormattingRule:input_type -> sickrock.CreateConditionalFormattingRuleRequest
	109, // 76: sickrock.SickRock.UpdateConditionalFormattingRule:input_type -> sickrock.UpdateConditionalFormattingRuleRequest
	107, // 77: sickrock.SickRock.DeleteConditionalFormattingRule:input_type -> sickrock.DeleteConditionalFormattingRuleRequest
	67,  // 78: sickrock.SickRock.Init:output_type -> sickrock.InitResponse
	1,   // 79: sickrock.SickRock.Ping:output_type -> sickrock.PingResponse
	69,  // 80: sickrock.SickRock.Login:output_type -> sickrock.LoginResponse
	71,  // 81: sickrock.SickRock.Logout:output_type -> sickrock.LogoutResponse
	75,  // 82: sickrock.SickRock.ValidateToken:output_type -> sickrock.ValidateTokenResponse
	73,  // 83: sickrock.SickRock.ResetUserPassword:output_type -> sickrock.ResetUserPasswordResponse
	77,  // 84: sickrock.SickRock.GenerateDeviceCode:output_type -> sickrock.GenerateDeviceCodeResponse
	79,  // 85: sickrock.SickRock.ClaimDeviceCode:output_type -> sickrock.ClaimDeviceCodeResponse
	81,  // 86: sickrock.SickRock.CheckDeviceCode:output_type -> sickrock.CheckDeviceCodeResponse
	83,  // 87: sickrock.SickRock.GetDeviceCodeSession:output_type -> sickrock.GetDeviceCodeSessionResponse
	4,   // 88: sickrock.SickRock.GetNavigationLinks:output_type -> sickrock.GetNavigationLinksResponse
	7,   // 89: sickrock.SickRock.GetTableConfigurations:output_type -> sickrock.GetTableConfigurationsResponse
	9,   // 90: sickrock.SickRock.CreateTableConfiguration:output_type -> sickrock.CreateTableConfigurationResponse
	12,  // 91: sickrock.SickRock.GetDatabaseTables:output_type -> sickrock.GetDatabaseTablesResponse
	15,  // 92: sickrock.SickRock.GetNavigation:output_type -> sickrock.GetNavigationResponse
	18,  // 93: sickrock.SickRock.ListItems:output_type -> sickrock.ListItemsResponse
	20,  // 94: sickrock.SickRock.CreateItem:output_type -> sickrock.CreateItemResponse
	22,  // 95: sickrock.SickRock.GetItem:output_type -> sickrock.GetItemResponse
	24,  // 96: sickrock.SickRock.EditItem:output_type -> sickrock.EditItemResponse
	26,  // 97: sickrock.SickRock.DeleteItem:output_type -> sickrock.DeleteItemResponse
	29,  // 98: sickrock.SickRock.GetTableStructure:output_type -> sickrock.GetTableStructureResponse
	29,  // 99: sickrock.SickRock.AddTableColumn:output_type -> sickrock.GetTableStructureResponse
	33,  // 100: sickrock.SickRock.CreateTableView:output_type -> sickrock.CreateTableViewResponse
	35,  // 101: sickrock.SickRock.UpdateTableView:output_type -> sickrock.UpdateTableViewResponse
	38,  // 102: sickrock.SickRock.GetTableViews:output_type -> sickrock.GetTableViewsResponse
	40,  // 103: sickrock.SickRock.DeleteTableView:output_type -> sickrock.DeleteTableViewResponse
	43,  // 104: sickrock.SickRock.CreateForeignKey:output_type -> sickrock.CreateForeignKeyResponse
	45,  // 105: sickrock.SickRock.GetForeignKeys:output_type -> sickrock.GetForeignKeysResponse
	47,  // 106: sickrock.SickRock.DeleteForeignKey:output_type -> sickrock.DeleteForeignKeyResponse
	49,  // 107: sickrock.SickRock.ChangeColumnType:output_type -> sickrock.ChangeColumnTypeResponse
	51,  // 108: sickrock.SickRock.DropColumn:output_type -> sickrock.DropColumnResponse
	53,  // 109: sickrock.SickRock.ChangeColumnName:output_type -> sickrock.ChangeColumnNameResponse
	56,  // 110: sickrock.SickRock.GetMostRecentlyViewed:output_type -> sickrock.GetMostRecentlyViewedResponse
	59,  // 111: sickrock.SickRock.GetDashboards:output_type -> sickrock.GetDashboardsResponse
	63,  // 112: sickrock.SickRock.GetDashboardComponentRules:output_type -> sickrock.GetDashboardComponentRulesResponse
	65,  // 113: sickrock.SickRock.CreateDashboardComponentRule:output_type -> sickrock.CreateDashboardComponentRuleResponse
	85,  // 114: sickrock.SickRock.GetSystemInfo:output_type -> sickrock.GetSystemInfoResponse
	87,  // 115: sickrock.SickRock.GetUserBookmarks:output_type -> sickrock.GetUserBookmarksResponse
	89,  // 116: sickrock.SickRock.CreateUserBookmark:output_type -> sickrock.CreateUserBookmarkResponse
	91,  // 117: sickrock.SickRock.DeleteUserBookmark:output_type -> sickrock.DeleteUserBookmarkResponse
	94,  // 118: sickrock.SickRock.CreateAPIKey:output_type -> sickrock.CreateAPIKeyResponse
	96,  // 119: sickrock.SickRock.GetAPIKeys:output_type -> sickrock.GetAPIKeysResponse
	98,  // 120: sickrock.SickRock.DeleteAPIKey:output_type -> sickrock.DeleteAPIKeyResponse
	100, // 121: sickrock.SickRock.DeactivateAPIKey:output_type -> sickrock.DeactivateAPIKeyResponse
	104, // 122: sickrock.SickRock.GetConditionalFormattingRules:output_type -> sickrock.GetConditionalFormattingRulesResponse
	106, // 123: sickrock.SickRock.CreateConditionalFormattingRule:output_type -> sickrock.CreateConditionalFormattingRuleResponse
	110, // 124: sickrock.SickRock.UpdateConditionalFormattingRule:output_type -> sickrock.UpdateConditionalFormattingRuleResponse
	108, // 125: sickrock.SickRock.DeleteConditionalFormattingRule:output_type -> sickrock.DeleteConditionalFormattingRuleResponse
	78,  // [78:126] is the sub-list for method output_type
	30,  // [30:78] is the sub-list for method input_type
	30,  // [30:30] is the sub-list for extension type_name
	30,  // [30:30] is the sub-list for extension extendee
	0,   // [0:30] is the sub-list for field type_name
}

func init() { file_sickrock_proto_init() }
func file_sickrock_proto_init() {
	if File_sickrock_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sickrock_proto_rawDesc), len(file_sickrock_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   115,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sickrock_proto_goTypes,
		DependencyIndexes: file_sickrock_proto_depIdxs,
		MessageInfos:      file_sickrock_proto_msgTypes,
	}.Build()
	File_sickrock_proto = out.File
	file_sickrock_proto_goTypes = nil
	file_sickrock_proto_depIdxs = nil
}
